{"ast":null,"code":"/**\n * @module ol/source/ImageWMS\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport { DEFAULT_VERSION } from './wms.js';\nimport { appendParams } from '../uri.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { ceil, floor, round } from '../math.js';\nimport { compareVersions } from '../string.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth } from '../extent.js';\nimport { get as getProjection, transform } from '../proj.js';\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nvar DECIMALS = 4;\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */function (_super) {\n  __extends(ImageWMS, _super);\n  /**\n   * @param {Options} [opt_options] ImageWMS options.\n   */\n  function ImageWMS(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n    _this = _super.call(this, {\n      attributions: options.attributions,\n      interpolate: interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions\n    }) || this;\n    /**\n     * @private\n     * @type {?string}\n     */\n    _this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    _this.url_ = options.url;\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ? options.imageLoadFunction : defaultImageLoadFunction;\n    /**\n     * @private\n     * @type {!Object}\n     */\n    _this.params_ = options.params || {};\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.v13_ = true;\n    _this.updateV13_();\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    _this.serverType_ = options.serverType;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    _this.image_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    _this.imageSize_ = [0, 0];\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.renderedRevision_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n    return _this;\n  }\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n    var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n    var x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    var y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n    return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n  };\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  ImageWMS.prototype.getLegendUrl = function (resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png'\n    };\n    if (params === undefined || params['LAYER'] === undefined) {\n      var layers = this.params_.LAYERS;\n      var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n    if (resolution !== undefined) {\n      var mpu = this.getProjection() ? this.getProjection().getMetersPerUnit() : 1;\n      var pixelSize = 0.00028;\n      baseParams['SCALE'] = resolution * mpu / pixelSize;\n    }\n    assign(baseParams, params);\n    return appendParams(/** @type {string} */this.url_, baseParams);\n  };\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function () {\n    return this.params_;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    resolution = this.findNearestResolution(resolution);\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n    var imageResolution = resolution / pixelRatio;\n    var center = getCenter(extent);\n    var viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    var viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0, [viewWidth, viewHeight]);\n    var requestWidth = ceil(this.ratio_ * getWidth(extent) / imageResolution, DECIMALS);\n    var requestHeight = ceil(this.ratio_ * getHeight(extent) / imageResolution, DECIMALS);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0, [requestWidth, requestHeight]);\n    var image = this.image_;\n    if (image && this.renderedRevision_ == this.getRevision() && image.getResolution() == resolution && image.getPixelRatio() == pixelRatio && containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n    this.imageSize_[0] = round(getWidth(requestExtent) / imageResolution, DECIMALS);\n    this.imageSize_[1] = round(getHeight(requestExtent) / imageResolution, DECIMALS);\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n    this.renderedRevision_ = this.getRevision();\n    this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n    return this.image_;\n  };\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function () {\n    return this.imageLoadFunction_;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          var dpi = 90 * pixelRatio + 0.5 | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          // Unknown `serverType` configured\n          assert(false, 8);\n          break;\n      }\n    }\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n    return appendParams(/** @type {string} */this.url_, params);\n  };\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function () {\n    return this.url_;\n  };\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function () {\n    var version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n  return ImageWMS;\n}(ImageSource);\nexport default ImageWMS;","map":{"version":3,"names":["EventType","ImageSource","defaultImageLoadFunction","ImageWrapper","DEFAULT_VERSION","appendParams","assert","assign","calculateSourceResolution","ceil","floor","round","compareVersions","containsExtent","getCenter","getForViewAndSize","getHeight","getWidth","get","getProjection","transform","DECIMALS","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","_super","__extends","opt_options","_this","options","interpolate","imageSmoothing","undefined","call","attributions","projection","resolutions","crossOrigin_","crossOrigin","url_","url","imageLoadFunction_","imageLoadFunction","params_","params","v13_","updateV13_","serverType_","serverType","hidpi_","hidpi","image_","imageSize_","renderedRevision_","ratio_","ratio","prototype","getFeatureInfoUrl","coordinate","resolution","projectionObj","sourceProjectionObj","extent","baseParams","x","y","getRequestUrl_","getLegendUrl","layers","LAYERS","isSingleLayer","Array","isArray","length","mpu","getMetersPerUnit","pixelSize","getParams","getImageInternal","pixelRatio","findNearestResolution","imageResolution","center","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","image","getRevision","getResolution","getPixelRatio","getExtent","addEventListener","CHANGE","handleImageChange","bind","getImageLoadFunction","size","getCode","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","getUrl","setImageLoadFunction","changed","setUrl","updateParams","version"],"sources":["../src/source/ImageWMS.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
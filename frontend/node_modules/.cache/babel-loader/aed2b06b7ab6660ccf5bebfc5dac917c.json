{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport { AttributeType } from '../../webgl/Helper.js';\nimport { ELEMENT_ARRAY_BUFFER, STATIC_DRAW } from '../../webgl.js';\nimport { apply as applyTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, translate as translateTransform } from '../../transform.js';\nimport { boundingExtent, containsCoordinate, getIntersection, isEmpty } from '../../extent.js';\nimport { create as createMat4, fromTransform as mat4FromTransform } from '../../vec/mat4.js';\nimport { createOrUpdate as createTileCoord, getKey as getTileCoordKey } from '../../tilecoord.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { toSize } from '../../size.js';\nexport var Uniforms = {\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution',\n  TEXTURE_ORIGIN_X: 'u_textureOriginX',\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY',\n  RENDER_EXTENT: 'u_renderExtent',\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom'\n};\nexport var Attributes = {\n  TEXTURE_COORD: 'a_textureCoord'\n};\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nvar attributeDescriptions = [{\n  name: Attributes.TEXTURE_COORD,\n  size: 2,\n  type: AttributeType.FLOAT\n}];\n/**\n * @type {Object<string, boolean>}\n */\nvar empty = {};\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 2 * (1 - 1 / (z + 1)) - 1;\n}\n/**\n * Add a tile texture to the lookup.\n * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n * tile textures by zoom level.\n * @param {import(\"../../webgl/TileTexture.js\").default} tileTexture A tile texture.\n * @param {number} z The zoom level.\n */\nfunction addTileTextureToLookup(tileTexturesByZ, tileTexture, z) {\n  if (!(z in tileTexturesByZ)) {\n    tileTexturesByZ[z] = [];\n  }\n  tileTexturesByZ[z].push(tileTexture);\n}\n/**\n * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  var layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(extent, fromUserExtent(layerState.extent, frameState.viewState.projection));\n  }\n  var source = /** @type {import(\"../../source/Tile.js\").default} */layerState.layer.getRenderSource();\n  if (!source.getWrapX()) {\n    var gridExtent = source.getTileGridForProjection(frameState.viewState.projection).getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\nfunction getCacheKey(source, tileCoord) {\n  return \"\".concat(source.getKey(), \",\").concat(getTileCoordKey(tileCoord));\n}\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLLayerRenderer<LayerType>}\n * @api\n */\nvar WebGLTileLayerRenderer = /** @class */function (_super) {\n  __extends(WebGLTileLayerRenderer, _super);\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  function WebGLTileLayerRenderer(tileLayer, options) {\n    var _this = _super.call(this, tileLayer, {\n      uniforms: options.uniforms\n    }) || this;\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    _this.renderComplete = false;\n    /**\n     * This transform converts texture coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    _this.tileTransform_ = createTransform();\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    _this.tempMat4_ = createMat4();\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    _this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    _this.tempTileCoord_ = createTileCoord(0, 0, 0);\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    _this.tempSize_ = [0, 0];\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    _this.program_;\n    /**\n     * @private\n     */\n    _this.vertexShader_ = options.vertexShader;\n    /**\n     * @private\n     */\n    _this.fragmentShader_ = options.fragmentShader;\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    _this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    _this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n    var cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../webgl/TileTexture.js\").default>}\n     * @private\n     */\n    _this.tileTextureCache_ = new LRUCache(cacheSize);\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    _this.paletteTextures_ = options.paletteTextures || [];\n    /**\n     * @private\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    _this.frameState_ = null;\n    return _this;\n  }\n  /**\n   * @param {Options} options Options.\n   */\n  WebGLTileLayerRenderer.prototype.reset = function (options) {\n    _super.prototype.reset.call(this, {\n      uniforms: options.uniforms\n    });\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(this.fragmentShader_, this.vertexShader_);\n    }\n  };\n  WebGLTileLayerRenderer.prototype.afterHelperCreated = function () {\n    this.program_ = this.helper.getProgram(this.fragmentShader_, this.vertexShader_);\n    this.helper.flushBufferData(this.indices_);\n  };\n  /**\n   * @param {import(\"../../webgl/TileTexture\").TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  WebGLTileLayerRenderer.prototype.isDrawableTile_ = function (tile) {\n    var tileLayer = this.getLayer();\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED || tileState == TileState.EMPTY || tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  WebGLTileLayerRenderer.prototype.prepareFrameInternal = function (frameState) {\n    var layer = this.getLayer();\n    var source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  };\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {Object<number, Array<TileTexture>>} tileTexturesByZ The zoom level.\n   */\n  WebGLTileLayerRenderer.prototype.enqueueTiles = function (frameState, extent, initialZ, tileTexturesByZ) {\n    var viewState = frameState.viewState;\n    var tileLayer = this.getLayer();\n    var tileSource = tileLayer.getRenderSource();\n    var tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    var gutter = tileSource.getGutterForProjection(viewState.projection);\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileTextureCache = this.tileTextureCache_;\n    var minZ = Math.max(initialZ - tileLayer.getPreload(), tileGrid.getMinZoom(), tileLayer.getMinZoom());\n    for (var z = initialZ; z >= minZ; --z) {\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, this.tempTileRange_);\n      var tileResolution = tileGrid.getResolution(z);\n      for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          var tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          var cacheKey = getCacheKey(tileSource, tileCoord);\n          /** @type {TileTexture} */\n          var tileTexture = void 0;\n          /** @type {import(\"../../webgl/TileTexture\").TileType} */\n          var tile = void 0;\n          if (tileTextureCache.containsKey(cacheKey)) {\n            tileTexture = tileTextureCache.get(cacheKey);\n            tile = tileTexture.tile;\n          }\n          if (!tileTexture || tileTexture.tile.key !== tileSource.getKey()) {\n            tile = tileSource.getTile(z, x, y, frameState.pixelRatio, viewState.projection);\n            if (!tileTexture) {\n              tileTexture = new TileTexture({\n                tile: tile,\n                grid: tileGrid,\n                helper: this.helper,\n                gutter: gutter\n              });\n              tileTextureCache.set(cacheKey, tileTexture);\n            } else {\n              if (this.isDrawableTile_(tile)) {\n                tileTexture.setTile(tile);\n              } else {\n                var interimTile = /** @type {import(\"../../webgl/TileTexture\").TileType} */tile.getInterimTile();\n                tileTexture.setTile(interimTile);\n              }\n            }\n          }\n          addTileTextureToLookup(tileTexturesByZ, tileTexture, z);\n          var tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([tile, tileSourceKey, tileGrid.getTileCoordCenter(tileCoord), tileResolution]);\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  WebGLTileLayerRenderer.prototype.renderFrame = function (frameState) {\n    this.frameState_ = frameState;\n    this.renderComplete = true;\n    var gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n    var viewState = frameState.viewState;\n    var tileLayer = this.getLayer();\n    var tileSource = tileLayer.getRenderSource();\n    var tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    var gutter = tileSource.getGutterForProjection(viewState.projection);\n    var extent = getRenderExtent(frameState, frameState.extent);\n    var z = tileGrid.getZForResolution(viewState.resolution, tileSource.zDirection);\n    /**\n     * @type {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>}\n     */\n    var tileTexturesByZ = {};\n    if (frameState.nextExtent) {\n      var targetZ = tileGrid.getZForResolution(viewState.nextResolution, tileSource.zDirection);\n      var nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tileTexturesByZ);\n    }\n    this.enqueueTiles(frameState, extent, z, tileTexturesByZ);\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    var alphaLookup = {};\n    var uid = getUid(this);\n    var time = frameState.time;\n    var blend = false;\n    // look for cached tiles to use if a target tile is not ready\n    var tileTextures = tileTexturesByZ[z];\n    for (var i = 0, ii = tileTextures.length; i < ii; ++i) {\n      var tileTexture = tileTextures[i];\n      var tile = tileTexture.tile;\n      var tileCoord = tile.tileCoord;\n      if (tileTexture.loaded) {\n        var alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        var tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n      // first look for child tiles (at z + 1)\n      var coveredByChildren = this.findAltTiles_(tileGrid, tileCoord, z + 1, tileTexturesByZ);\n      if (coveredByChildren) {\n        continue;\n      }\n      // next look for parent tiles\n      var minZoom = tileGrid.getMinZoom();\n      for (var parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        var coveredByParent = this.findAltTiles_(tileGrid, tileCoord, parentZ, tileTexturesByZ);\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n    this.helper.useProgram(this.program_);\n    this.helper.prepareDraw(frameState, !blend);\n    var zs = Object.keys(tileTexturesByZ).map(Number).sort(numberSafeCompareFunction);\n    var centerX = viewState.center[0];\n    var centerY = viewState.center[1];\n    for (var j = 0, jj = zs.length; j < jj; ++j) {\n      var tileZ = zs[j];\n      var tileResolution = tileGrid.getResolution(tileZ);\n      var tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n      var tileOrigin = tileGrid.getOrigin(tileZ);\n      var tileWidthWithGutter = tileSize[0] + 2 * gutter;\n      var tileHeightWithGutter = tileSize[1] + 2 * gutter;\n      var aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n      var centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n      var centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n      var tileScale = viewState.resolution / tileResolution;\n      var depth = depthForZ(tileZ);\n      var tileTextures_1 = tileTexturesByZ[tileZ];\n      for (var i = 0, ii = tileTextures_1.length; i < ii; ++i) {\n        var tileTexture = tileTextures_1[i];\n        if (!tileTexture.loaded) {\n          continue;\n        }\n        var tile = tileTexture.tile;\n        var tileCoord = tile.tileCoord;\n        var tileCoordKey = getTileCoordKey(tileCoord);\n        var tileCenterI = tileCoord[1];\n        var tileCenterJ = tileCoord[2];\n        resetTransform(this.tileTransform_);\n        scaleTransform(this.tileTransform_, 2 / (frameState.size[0] * tileScale / tileWidthWithGutter), -2 / (frameState.size[1] * tileScale / tileWidthWithGutter));\n        rotateTransform(this.tileTransform_, viewState.rotation);\n        scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n        translateTransform(this.tileTransform_, (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter, (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter);\n        this.helper.setUniformMatrixValue(Uniforms.TILE_TRANSFORM, mat4FromTransform(this.tempMat4_, this.tileTransform_));\n        this.helper.bindBuffer(tileTexture.coords);\n        this.helper.bindBuffer(this.indices_);\n        this.helper.enableAttributes(attributeDescriptions);\n        var textureSlot = 0;\n        while (textureSlot < tileTexture.textures.length) {\n          var textureProperty = 'TEXTURE' + textureSlot;\n          var uniformName = \"\".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(textureSlot, \"]\");\n          gl.activeTexture(gl[textureProperty]);\n          gl.bindTexture(gl.TEXTURE_2D, tileTexture.textures[textureSlot]);\n          gl.uniform1i(this.helper.getUniformLocation(uniformName), textureSlot);\n          ++textureSlot;\n        }\n        for (var paletteIndex = 0; paletteIndex < this.paletteTextures_.length; ++paletteIndex) {\n          var paletteTexture = this.paletteTextures_[paletteIndex];\n          gl.activeTexture(gl['TEXTURE' + textureSlot]);\n          var texture = paletteTexture.getTexture(gl);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.uniform1i(this.helper.getUniformLocation(paletteTexture.name), textureSlot);\n          ++textureSlot;\n        }\n        var alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n        if (alpha < 1) {\n          frameState.animate = true;\n        }\n        this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n        this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n        this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_WIDTH, tileWidthWithGutter);\n        this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_HEIGHT, tileHeightWithGutter);\n        this.helper.setUniformFloatValue(Uniforms.TEXTURE_RESOLUTION, tileResolution);\n        this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_X, tileOrigin[0] + tileCenterI * tileSize[0] * tileResolution - gutter * tileResolution);\n        this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_Y, tileOrigin[1] - tileCenterJ * tileSize[1] * tileResolution + gutter * tileResolution);\n        var gutterExtent = extent;\n        if (gutter > 0) {\n          gutterExtent = tileGrid.getTileCoordExtent(tileCoord);\n          getIntersection(gutterExtent, extent, gutterExtent);\n        }\n        this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n        this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n        this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n        this.helper.drawElements(0, this.indices_.getSize());\n      }\n    }\n    this.helper.finalizeDraw(frameState, this.dispatchPreComposeEvent, this.dispatchPostComposeEvent);\n    var canvas = this.helper.getCanvas();\n    var tileTextureCache = this.tileTextureCache_;\n    while (tileTextureCache.canExpireCache()) {\n      var tileTexture = tileTextureCache.pop();\n      tileTexture.dispose();\n    }\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../PluggableMap.js\").default} map Map.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    var postRenderFunction = function (map, frameState) {\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n    frameState.postRenderFunctions.push(postRenderFunction);\n    this.postRender(gl, frameState);\n    return canvas;\n  };\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  WebGLTileLayerRenderer.prototype.getData = function (pixel) {\n    var gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    var layer = this.getLayer();\n    var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    var viewState = frameState.viewState;\n    var layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(fromUserExtent(layerExtent, viewState.projection), coordinate)) {\n        return null;\n      }\n    }\n    // determine last source suitable for rendering at coordinate\n    var sources = layer.getSources(boundingExtent([coordinate]), viewState.resolution);\n    var i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        var gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n    var tileTextureCache = this.tileTextureCache_;\n    for (var z = tileGrid.getZForResolution(viewState.resolution); z >= tileGrid.getMinZoom(); --z) {\n      var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      var cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      var tileTexture = tileTextureCache.get(cacheKey);\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      var tileOrigin = tileGrid.getOrigin(z);\n      var tileSize = toSize(tileGrid.getTileSize(z));\n      var tileResolution = tileGrid.getResolution(z);\n      var col = (coordinate[0] - tileOrigin[0]) / tileResolution - tileCoord[1] * tileSize[0];\n      var row = (tileOrigin[1] - coordinate[1]) / tileResolution - tileCoord[2] * tileSize[1];\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  };\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n   * tile textures by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  WebGLTileLayerRenderer.prototype.findAltTiles_ = function (tileGrid, tileCoord, altZ, tileTexturesByZ) {\n    var tileRange = tileGrid.getTileRangeForTileCoordAndZ(tileCoord, altZ, this.tempTileRange_);\n    if (!tileRange) {\n      return false;\n    }\n    var covered = true;\n    var tileTextureCache = this.tileTextureCache_;\n    var source = this.getLayer().getRenderSource();\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        var cacheKey = getCacheKey(source, [altZ, x, y]);\n        var loaded = false;\n        if (tileTextureCache.containsKey(cacheKey)) {\n          var tileTexture = tileTextureCache.get(cacheKey);\n          if (tileTexture.loaded) {\n            addTileTextureToLookup(tileTexturesByZ, tileTexture, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n  WebGLTileLayerRenderer.prototype.removeHelper = function () {\n    if (this.helper) {\n      var tileTextureCache = this.tileTextureCache_;\n      tileTextureCache.forEach(function (tileTexture) {\n        return tileTexture.dispose();\n      });\n      tileTextureCache.clear();\n    }\n    _super.prototype.removeHelper.call(this);\n  };\n  /**\n   * Clean up.\n   */\n  WebGLTileLayerRenderer.prototype.disposeInternal = function () {\n    var helper = this.helper;\n    if (helper) {\n      var gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    _super.prototype.disposeInternal.call(this);\n    delete this.indices_;\n    delete this.tileTextureCache_;\n    delete this.frameState_;\n  };\n  return WebGLTileLayerRenderer;\n}(WebGLLayerRenderer);\nexport default WebGLTileLayerRenderer;","map":{"version":3,"names":["LRUCache","TileRange","TileState","TileTexture","WebGLArrayBuffer","WebGLLayerRenderer","AttributeType","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","apply","applyTransform","create","createTransform","reset","resetTransform","rotate","rotateTransform","scale","scaleTransform","translate","translateTransform","boundingExtent","containsCoordinate","getIntersection","isEmpty","createMat4","fromTransform","mat4FromTransform","createOrUpdate","createTileCoord","getKey","getTileCoordKey","fromUserExtent","getUid","numberSafeCompareFunction","toSize","Uniforms","TILE_TEXTURE_ARRAY","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","RENDER_EXTENT","RESOLUTION","ZOOM","Attributes","TEXTURE_COORD","attributeDescriptions","name","size","type","FLOAT","empty","depthForZ","z","addTileTextureToLookup","tileTexturesByZ","tileTexture","push","getRenderExtent","frameState","extent","layerState","layerStatesArray","layerIndex","viewState","projection","source","layer","getRenderSource","getWrapX","gridExtent","getTileGridForProjection","getExtent","getCacheKey","tileCoord","concat","WebGLTileLayerRenderer","_super","__extends","tileLayer","options","_this","call","uniforms","renderComplete","tileTransform_","tempMat4_","tempTileRange_","tempTileCoord_","tempSize_","program_","vertexShader_","vertexShader","fragmentShader_","fragmentShader","indices_","fromArray","cacheSize","undefined","tileTextureCache_","paletteTextures_","paletteTextures","frameState_","prototype","helper","getProgram","afterHelperCreated","flushBufferData","isDrawableTile_","tile","getLayer","tileState","getState","useInterimTilesOnError","getUseInterimTilesOnError","LOADED","EMPTY","ERROR","prepareFrameInternal","enqueueTiles","initialZ","tileSource","tileGrid","gutter","getGutterForProjection","tileSourceKey","wantedTiles","tileTextureCache","minZ","Math","max","getPreload","getMinZoom","tileRange","getTileRangeForExtentAndZ","tileResolution","getResolution","x","minX","maxX","y","minY","maxY","cacheKey","containsKey","get","key","getTile","pixelRatio","grid","set","setTile","interimTile","getInterimTile","tileQueueKey","IDLE","tileQueue","isKeyQueued","enqueue","getTileCoordCenter","renderFrame","gl","getGL","preRender","getZForResolution","resolution","zDirection","nextExtent","targetZ","nextResolution","alphaLookup","uid","time","blend","tileTextures","i","ii","length","loaded","alpha","getAlpha","endTransition","tileCoordKey","coveredByChildren","findAltTiles_","minZoom","parentZ","coveredByParent","useProgram","prepareDraw","zs","Object","keys","map","Number","sort","centerX","center","centerY","j","jj","tileZ","tileSize","getTileSize","tileOrigin","getOrigin","tileWidthWithGutter","tileHeightWithGutter","aspectRatio","centerI","centerJ","tileScale","depth","tileTextures_1","tileCenterI","tileCenterJ","rotation","setUniformMatrixValue","bindBuffer","coords","enableAttributes","textureSlot","textures","textureProperty","uniformName","activeTexture","bindTexture","TEXTURE_2D","uniform1i","getUniformLocation","paletteIndex","paletteTexture","texture","getTexture","animate","setUniformFloatValue","gutterExtent","getTileCoordExtent","setUniformFloatVec4","zoom","drawElements","getSize","finalizeDraw","dispatchPreComposeEvent","dispatchPostComposeEvent","canvas","getCanvas","canExpireCache","pop","dispose","postRenderFunction","expireCache","postRenderFunctions","postRender","getData","pixel","coordinate","pixelToCoordinateTransform","slice","layerExtent","sources","getSources","getTileCoordForCoordAndZ","col","row","getPixelData","altZ","getTileRangeForTileCoordAndZ","covered","removeHelper","forEach","clear","disposeInternal","deleteProgram","deleteBuffer"],"sources":["../../src/renderer/webgl/TileLayer.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
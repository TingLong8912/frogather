{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport { FLOAT, UNSIGNED_BYTE, UNSIGNED_INT, UNSIGNED_SHORT, getContext } from '../webgl.js';\nimport { clear } from '../obj.js';\nimport { compose as composeTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform } from '../transform.js';\nimport { create, fromTransform } from '../vec/mat4.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution'\n};\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport var AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT\n};\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nvar canvasCache = {};\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\nvar uniqueCanvasCacheKeyCount = 0;\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  var key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\nfunction getCanvas(key) {\n  var cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    var canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    cacheItem = {\n      users: 0,\n      canvas: canvas\n    };\n    canvasCache[key] = cacheItem;\n  }\n  cacheItem.users += 1;\n  return cacheItem.canvas;\n}\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  var cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n  var canvas = cacheItem.canvas;\n  var gl = getContext(canvas);\n  var extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  delete canvasCache[key];\n}\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes enableAttributes()} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @api\n */\nvar WebGLHelper = /** @class */function (_super) {\n  __extends(WebGLHelper, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  function WebGLHelper(opt_options) {\n    var _this = _super.call(this) || this;\n    var options = opt_options || {};\n    /** @private */\n    _this.boundHandleWebGLContextLost_ = _this.handleWebGLContextLost.bind(_this);\n    /** @private */\n    _this.boundHandleWebGLContextRestored_ = _this.handleWebGLContextRestored.bind(_this);\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.canvasCacheKey_ = options.canvasCacheKey ? getSharedCanvasCacheKey(options.canvasCacheKey) : getUniqueCanvasCacheKey();\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    _this.canvas_ = getCanvas(_this.canvasCacheKey_);\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    _this.gl_ = getContext(_this.canvas_);\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    _this.bufferCache_ = {};\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    _this.extensionCache_ = {};\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    _this.currentProgram_ = null;\n    _this.canvas_.addEventListener(ContextEventType.LOST, _this.boundHandleWebGLContextLost_);\n    _this.canvas_.addEventListener(ContextEventType.RESTORED, _this.boundHandleWebGLContextRestored_);\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    _this.offsetRotateMatrix_ = createTransform();\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    _this.offsetScaleMatrix_ = createTransform();\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.tmpMat4_ = create();\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    _this.uniformLocations_ = {};\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    _this.attribLocations_ = {};\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    _this.uniforms_ = [];\n    if (options.uniforms) {\n      _this.setUniforms(options.uniforms);\n    }\n    var gl = _this.getGL();\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    _this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function (options) {\n      return new WebGLPostProcessingPass({\n        webGlContext: gl,\n        scaleRatio: options.scaleRatio,\n        vertexShader: options.vertexShader,\n        fragmentShader: options.fragmentShader,\n        uniforms: options.uniforms\n      });\n    }) : [new WebGLPostProcessingPass({\n      webGlContext: gl\n    })];\n    /**\n     * @type {string|null}\n     * @private\n     */\n    _this.shaderCompileErrors_ = null;\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.startTime_ = Date.now();\n    return _this;\n  }\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  WebGLHelper.prototype.setUniforms = function (uniforms) {\n    this.uniforms_ = [];\n    for (var name_1 in uniforms) {\n      this.uniforms_.push({\n        name: name_1,\n        value: uniforms[name_1]\n      });\n    }\n    this.uniformLocations_ = {};\n  };\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  WebGLHelper.prototype.canvasCacheKeyMatches = function (canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  };\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  WebGLHelper.prototype.getExtension = function (name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    var extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  };\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  WebGLHelper.prototype.bindBuffer = function (buffer) {\n    var gl = this.getGL();\n    var bufferKey = getUid(buffer);\n    var bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      var webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  };\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  WebGLHelper.prototype.flushBufferData = function (buffer) {\n    var gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  };\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  WebGLHelper.prototype.deleteBuffer = function (buf) {\n    var gl = this.getGL();\n    var bufferKey = getUid(buf);\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  };\n  /**\n   * Clean up.\n   */\n  WebGLHelper.prototype.disposeInternal = function () {\n    this.canvas_.removeEventListener(ContextEventType.LOST, this.boundHandleWebGLContextLost_);\n    this.canvas_.removeEventListener(ContextEventType.RESTORED, this.boundHandleWebGLContextRestored_);\n    releaseCanvas(this.canvasCacheKey_);\n    delete this.gl_;\n    delete this.canvas_;\n  };\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   * @api\n   */\n  WebGLHelper.prototype.prepareDraw = function (frameState, opt_disableAlphaBlend) {\n    var gl = this.getGL();\n    var canvas = this.getCanvas();\n    var size = frameState.size;\n    var pixelRatio = frameState.pixelRatio;\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n    gl.useProgram(this.currentProgram_);\n    // loop backwards in post processes list\n    for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  };\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  WebGLHelper.prototype.prepareDrawToRenderTarget = function (frameState, renderTarget, opt_disableAlphaBlend) {\n    var gl = this.getGL();\n    var size = renderTarget.getSize();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  };\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   * @api\n   */\n  WebGLHelper.prototype.drawElements = function (start, end) {\n    var gl = this.getGL();\n    this.getExtension('OES_element_index_uint');\n    var elementType = gl.UNSIGNED_INT;\n    var elementSize = 4;\n    var numItems = end - start;\n    var offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  };\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  WebGLHelper.prototype.finalizeDraw = function (frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (var i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(frameState, null, preCompose, postCompose);\n      } else {\n        this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1]);\n      }\n    }\n  };\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   * @api\n   */\n  WebGLHelper.prototype.getCanvas = function () {\n    return this.canvas_;\n  };\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  WebGLHelper.prototype.getGL = function () {\n    return this.gl_;\n  };\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  WebGLHelper.prototype.applyFrameState = function (frameState) {\n    var size = frameState.size;\n    var rotation = frameState.viewState.rotation;\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n    this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    this.setUniformFloatValue(DefaultUniform.TIME, (Date.now() - this.startTime_) * 0.001);\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(DefaultUniform.RESOLUTION, frameState.viewState.resolution);\n  };\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  WebGLHelper.prototype.applyUniforms = function (frameState) {\n    var gl = this.getGL();\n    var value;\n    var textureSlot = 0;\n    this.uniforms_.forEach(function (uniform) {\n      value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[\"TEXTURE\".concat(textureSlot)]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        var imageReady = !(value instanceof HTMLImageElement) || /** @type {HTMLImageElement} */value.complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n        }\n        // fill texture slots by increasing index\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    }.bind(this));\n  };\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  WebGLHelper.prototype.useProgram = function (program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      var gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      this.uniformLocations_ = {};\n      this.attribLocations_ = {};\n      return true;\n    }\n  };\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  WebGLHelper.prototype.compileShader = function (source, type) {\n    var gl = this.getGL();\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  };\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   * @api\n   */\n  WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n    var gl = this.getGL();\n    var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n    var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n    var program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      var message = \"Fragment shader compliation failed: \".concat(gl.getShaderInfoLog(fragmentShader));\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      var message = \"Vertex shader compilation failed: \".concat(gl.getShaderInfoLog(vertexShader));\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      var message = \"GL program linking failed: \".concat(gl.getShaderInfoLog(vertexShader));\n      throw new Error(message);\n    }\n    return program;\n  };\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   * @api\n   */\n  WebGLHelper.prototype.getUniformLocation = function (name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocations_[name];\n  };\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   * @api\n   */\n  WebGLHelper.prototype.getAttributeLocation = function (name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocations_[name];\n  };\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   * @api\n   */\n  WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n    var size = frameState.size;\n    var rotation = frameState.viewState.rotation;\n    var resolution = frameState.viewState.resolution;\n    var center = frameState.viewState.center;\n    resetTransform(transform);\n    composeTransform(transform, 0, 0, 2 / (resolution * size[0]), 2 / (resolution * size[1]), -rotation, -center[0], -center[1]);\n    return transform;\n  };\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   * @api\n   */\n  WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  };\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  WebGLHelper.prototype.setUniformFloatVec4 = function (uniform, value) {\n    this.getGL().uniform4fv(this.getUniformLocation(uniform), value);\n  };\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   * @api\n   */\n  WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n    this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  };\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  WebGLHelper.prototype.enableAttributeArray_ = function (attribName, size, type, stride, offset) {\n    var location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n  };\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   * @api\n   */\n  WebGLHelper.prototype.enableAttributes = function (attributes) {\n    var stride = computeAttributesStride(attributes);\n    var offset = 0;\n    for (var i = 0; i < attributes.length; i++) {\n      var attr = attributes[i];\n      this.enableAttributeArray_(attr.name, attr.size, attr.type || FLOAT, stride, offset);\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  };\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  WebGLHelper.prototype.handleWebGLContextLost = function () {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  };\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  WebGLHelper.prototype.handleWebGLContextRestored = function () {};\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   * @api\n   */\n  WebGLHelper.prototype.createTexture = function (size, opt_data, opt_texture) {\n    var gl = this.getGL();\n    var texture = opt_texture || gl.createTexture();\n    // set params & size\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var border = 0;\n    var format = gl.RGBA;\n    var type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (opt_data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, opt_data);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, size[0], size[1], border, format, type, null);\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    return texture;\n  };\n  return WebGLHelper;\n}(Disposable);\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n  var stride = 0;\n  for (var i = 0; i < attributes.length; i++) {\n    var attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\nexport default WebGLHelper;","map":{"version":3,"names":["ContextEventType","Disposable","WebGLPostProcessingPass","FLOAT","UNSIGNED_BYTE","UNSIGNED_INT","UNSIGNED_SHORT","getContext","clear","compose","composeTransform","create","createTransform","reset","resetTransform","rotate","rotateTransform","scale","scaleTransform","fromTransform","getUid","ShaderType","FRAGMENT_SHADER","VERTEX_SHADER","DefaultUniform","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","AttributeType","canvasCache","getSharedCanvasCacheKey","key","uniqueCanvasCacheKeyCount","getUniqueCanvasCacheKey","getCanvas","cacheItem","canvas","document","createElement","style","position","left","users","releaseCanvas","gl","extension","getExtension","loseContext","WebGLHelper","_super","__extends","opt_options","_this","call","options","boundHandleWebGLContextLost_","handleWebGLContextLost","bind","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","canvas_","gl_","bufferCache_","extensionCache_","currentProgram_","addEventListener","LOST","RESTORED","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","uniforms_","uniforms","setUniforms","getGL","postProcessPasses_","postProcesses","map","webGlContext","scaleRatio","vertexShader","fragmentShader","shaderCompileErrors_","startTime_","Date","now","prototype","name_1","push","name","value","canvasCacheKeyMatches","bindBuffer","buffer","bufferKey","bufferCache","webGlBuffer","createBuffer","getType","flushBufferData","bufferData","getArray","getUsage","deleteBuffer","buf","bufferCacheEntry","isContextLost","disposeInternal","removeEventListener","prepareDraw","frameState","opt_disableAlphaBlend","size","pixelRatio","width","height","useProgram","i","length","init","bindTexture","TEXTURE_2D","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ZERO","ONE_MINUS_SRC_ALPHA","applyFrameState","applyUniforms","prepareDrawToRenderTarget","renderTarget","getSize","bindFramebuffer","FRAMEBUFFER","getFramebuffer","viewport","getTexture","drawElements","start","end","elementType","elementSize","numItems","offsetInBytes","TRIANGLES","finalizeDraw","preCompose","postCompose","ii","apply","rotation","viewState","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","setUniformFloatValue","zoom","resolution","textureSlot","forEach","uniform","HTMLCanvasElement","HTMLImageElement","ImageData","texture","prevValue","undefined","createTexture","activeTexture","concat","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","imageReady","complete","texImage2D","RGBA","uniform1i","getUniformLocation","Array","isArray","uniform2f","uniform3f","uniform4f","uniform1f","program","compileShader","source","type","shader","createShader","shaderSource","getProgram","fragmentShaderSource","vertexShaderSource","createProgram","attachShader","linkProgram","getShaderParameter","COMPILE_STATUS","message","getShaderInfoLog","Error","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","getAttribLocation","makeProjectionTransform","transform","center","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","stride","offset","location","enableVertexAttribArray","vertexAttribPointer","enableAttributes","attributes","computeAttributesStride","attr","getByteSizeFromType","opt_data","opt_texture","level","internalFormat","border","format","Uint8Array","BYTES_PER_ELEMENT","Uint16Array","Uint32Array","Float32Array"],"sources":["../src/webgl/Helper.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
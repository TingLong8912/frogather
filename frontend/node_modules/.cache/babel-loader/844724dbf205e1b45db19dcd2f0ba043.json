{"ast":null,"code":"import { __awaiter, __rest } from 'tslib';\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport AntModal from 'antd/es/modal';\nimport AntUpload from 'antd/es/upload';\nimport { forwardRef, useState, useRef, useCallback, useImperativeHandle, memo, useMemo } from 'react';\nimport AntButton from 'antd/es/button';\nimport AntSlider from 'antd/es/slider';\nimport Cropper from 'react-easy-crop';\nconst PREFIX = 'img-crop';\nconst ZOOM_INITIAL = 1;\nconst ZOOM_STEP = 0.1;\nconst ROTATION_INITIAL = 0;\nconst ROTATION_MIN = -180;\nconst ROTATION_MAX = 180;\nconst ROTATION_STEP = 1;\nconst ASPECT_STEP = 0.01;\nconst EasyCrop = forwardRef((props, ref) => {\n  const {\n    cropperRef,\n    zoomSlider,\n    rotationSlider,\n    aspectSlider,\n    showReset,\n    resetBtnText,\n    modalImage,\n    aspect: ASPECT_INITIAL,\n    minZoom,\n    maxZoom,\n    minAspect,\n    maxAspect,\n    cropShape,\n    showGrid,\n    cropperProps\n  } = props;\n  const [zoom, setZoom] = useState(ZOOM_INITIAL);\n  const [rotation, setRotation] = useState(ROTATION_INITIAL);\n  const [aspect, setAspect] = useState(ASPECT_INITIAL);\n  const isResetActive = zoom !== ZOOM_INITIAL || rotation !== ROTATION_INITIAL || aspect !== ASPECT_INITIAL;\n  const onReset = () => {\n    setZoom(ZOOM_INITIAL);\n    setRotation(ROTATION_INITIAL);\n    setAspect(ASPECT_INITIAL);\n  };\n  const [crop, onCropChange] = useState({\n    x: 0,\n    y: 0\n  });\n  const cropPixelsRef = useRef({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0\n  });\n  const onCropComplete = useCallback((_, croppedAreaPixels) => {\n    cropPixelsRef.current = croppedAreaPixels;\n  }, []);\n  useImperativeHandle(ref, () => ({\n    rotation,\n    cropPixelsRef,\n    onReset\n  }));\n  const wrapperClass = '[display:flex] [align-items:center] [width:60%] [margin-inline:auto]';\n  const buttonClass = '[display:flex] [align-items:center] [justify-content:center] [height:32px] [width:32px] [background:transparent] [border:0] [font-family:inherit] [font-size:18px] [cursor:pointer] disabled:[opacity:20%] disabled:[cursor:default]';\n  const sliderClass = '[flex:1]';\n  return jsxs(Fragment, {\n    children: [jsx(Cropper, Object.assign({}, cropperProps, {\n      ref: cropperRef,\n      image: modalImage,\n      crop: crop,\n      //\n      zoom: zoom,\n      rotation: rotation,\n      aspect: aspect,\n      minZoom: minZoom,\n      maxZoom: maxZoom,\n      zoomWithScroll: zoomSlider,\n      //\n      cropShape: cropShape,\n      showGrid: showGrid,\n      onCropChange: onCropChange,\n      onZoomChange: setZoom,\n      onRotationChange: setRotation,\n      onCropComplete: onCropComplete,\n      classes: {\n        containerClassName: `${PREFIX}-container ![position:relative] [width:100%] [height:40vh] [&~section:first-of-type]:[margin-top:16px] [&~section:last-of-type]:[margin-bottom:16px]`,\n        mediaClassName: `${PREFIX}-media`\n      }\n    })), zoomSlider && jsxs(\"section\", {\n      className: `${PREFIX}-control ${PREFIX}-control-zoom ${wrapperClass}`,\n      children: [jsx(\"button\", {\n        className: buttonClass,\n        onClick: () => setZoom(+(zoom - ZOOM_STEP).toFixed(1)),\n        disabled: zoom - ZOOM_STEP < minZoom,\n        children: \"\\uFF0D\"\n      }), jsx(AntSlider, {\n        className: sliderClass,\n        min: minZoom,\n        max: maxZoom,\n        step: ZOOM_STEP,\n        value: zoom,\n        onChange: setZoom\n      }), jsx(\"button\", {\n        className: buttonClass,\n        onClick: () => setZoom(+(zoom + ZOOM_STEP).toFixed(1)),\n        disabled: zoom + ZOOM_STEP > maxZoom,\n        children: \"\\uFF0B\"\n      })]\n    }), rotationSlider && jsxs(\"section\", {\n      className: `${PREFIX}-control ${PREFIX}-control-rotation ${wrapperClass}`,\n      children: [jsx(\"button\", {\n        className: `${buttonClass} [font-size:16px]`,\n        onClick: () => setRotation(rotation - ROTATION_STEP),\n        disabled: rotation === ROTATION_MIN,\n        children: \"\\u21BA\"\n      }), jsx(AntSlider, {\n        className: sliderClass,\n        min: ROTATION_MIN,\n        max: ROTATION_MAX,\n        step: ROTATION_STEP,\n        value: rotation,\n        onChange: setRotation\n      }), jsx(\"button\", {\n        className: `${buttonClass} [font-size:16px]`,\n        onClick: () => setRotation(rotation + ROTATION_STEP),\n        disabled: rotation === ROTATION_MAX,\n        children: \"\\u21BB\"\n      })]\n    }), aspectSlider && jsxs(\"section\", {\n      className: `${PREFIX}-control ${PREFIX}-control-aspect ${wrapperClass}`,\n      children: [jsx(\"button\", {\n        className: buttonClass,\n        onClick: () => setAspect(+(aspect - ASPECT_STEP).toFixed(2)),\n        disabled: aspect - ASPECT_STEP < minAspect,\n        children: \"\\u2195\"\n      }), jsx(AntSlider, {\n        className: sliderClass,\n        min: minAspect,\n        max: maxAspect,\n        step: ASPECT_STEP,\n        value: aspect,\n        onChange: setAspect\n      }), jsx(\"button\", {\n        className: buttonClass,\n        onClick: () => setAspect(+(aspect + ASPECT_STEP).toFixed(2)),\n        disabled: aspect + ASPECT_STEP > maxAspect,\n        children: \"\\u2194\"\n      })]\n    }), showReset && (zoomSlider || rotationSlider || aspectSlider) && jsx(AntButton, {\n      className: \"[bottom:20px] [position:absolute]\",\n      style: isResetActive ? {} : {\n        opacity: 0.3,\n        pointerEvents: 'none'\n      },\n      onClick: onReset,\n      children: resetBtnText\n    })]\n  });\n});\nvar EasyCrop$1 = memo(EasyCrop);\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\nvar css_248z = \".\\\\[align-items\\\\:center\\\\]{align-items:center}.\\\\[background\\\\:transparent\\\\]{background:transparent}.\\\\[border\\\\:0\\\\]{border:0}.\\\\[bottom\\\\:20px\\\\]{bottom:20px}.\\\\[cursor\\\\:pointer\\\\]{cursor:pointer}.\\\\[display\\\\:flex\\\\]{display:flex}.\\\\[flex\\\\:1\\\\]{flex:1}.\\\\[font-family\\\\:inherit\\\\]{font-family:inherit}.\\\\[font-size\\\\:16px\\\\]{font-size:16px}.\\\\[font-size\\\\:18px\\\\]{font-size:18px}.\\\\[height\\\\:32px\\\\]{height:32px}.\\\\[height\\\\:40vh\\\\]{height:40vh}.\\\\[justify-content\\\\:center\\\\]{justify-content:center}.\\\\[margin-inline\\\\:auto\\\\]{margin-inline:auto}.\\\\[position\\\\:absolute\\\\]{position:absolute}.\\\\!\\\\[position\\\\:relative\\\\]{position:relative!important}.\\\\[width\\\\:100\\\\%\\\\]{width:100%}.\\\\[width\\\\:32px\\\\]{width:32px}.\\\\[width\\\\:60\\\\%\\\\]{width:60%}.disabled\\\\:\\\\[cursor\\\\:default\\\\]:disabled{cursor:default}.disabled\\\\:\\\\[opacity\\\\:20\\\\%\\\\]:disabled{opacity:20%}.\\\\[\\\\&\\\\~section\\\\:first-of-type\\\\]\\\\:\\\\[margin-top\\\\:16px\\\\]~section:first-of-type{margin-top:16px}.\\\\[\\\\&\\\\~section\\\\:last-of-type\\\\]\\\\:\\\\[margin-bottom\\\\:16px\\\\]~section:last-of-type{margin-bottom:16px}\";\nstyleInject(css_248z, {\n  \"insertAt\": \"top\"\n});\nconst ImgCrop = forwardRef((props, cropperRef) => {\n  const {\n    quality = 0.4,\n    fillColor = 'white',\n    zoomSlider = true,\n    rotationSlider = false,\n    aspectSlider = false,\n    showReset = false,\n    resetText,\n    aspect = 1,\n    minZoom = 1,\n    maxZoom = 3,\n    minAspect = 0.5,\n    maxAspect = 2,\n    cropShape = 'rect',\n    showGrid = false,\n    cropperProps,\n    modalClassName,\n    modalTitle,\n    modalWidth,\n    modalOk,\n    modalCancel,\n    onModalOk,\n    onModalCancel,\n    modalProps,\n    beforeCrop,\n    children\n  } = props;\n  const cb = useRef({});\n  cb.current.onModalOk = onModalOk;\n  cb.current.onModalCancel = onModalCancel;\n  cb.current.beforeCrop = beforeCrop;\n  /**\n   * crop\n   */\n  const easyCropRef = useRef(null);\n  const getCropCanvas = useCallback(target => {\n    var _a;\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const context = ((_a = target === null || target === void 0 ? void 0 : target.getRootNode) === null || _a === void 0 ? void 0 : _a.call(target)) || document;\n    const imgSource = context.querySelector(`.${PREFIX}-media`);\n    const {\n      width: cropWidth,\n      height: cropHeight,\n      x: cropX,\n      y: cropY\n    } = easyCropRef.current.cropPixelsRef.current;\n    if (rotationSlider && easyCropRef.current.rotation !== ROTATION_INITIAL) {\n      const {\n        naturalWidth: imgWidth,\n        naturalHeight: imgHeight\n      } = imgSource;\n      const angle = easyCropRef.current.rotation * (Math.PI / 180);\n      // get container for rotated image\n      const sine = Math.abs(Math.sin(angle));\n      const cosine = Math.abs(Math.cos(angle));\n      const squareWidth = imgWidth * cosine + imgHeight * sine;\n      const squareHeight = imgHeight * cosine + imgWidth * sine;\n      canvas.width = squareWidth;\n      canvas.height = squareHeight;\n      ctx.fillStyle = fillColor;\n      ctx.fillRect(0, 0, squareWidth, squareHeight);\n      // rotate container\n      const squareHalfWidth = squareWidth / 2;\n      const squareHalfHeight = squareHeight / 2;\n      ctx.translate(squareHalfWidth, squareHalfHeight);\n      ctx.rotate(angle);\n      ctx.translate(-squareHalfWidth, -squareHalfHeight);\n      // draw rotated image\n      const imgX = (squareWidth - imgWidth) / 2;\n      const imgY = (squareHeight - imgHeight) / 2;\n      ctx.drawImage(imgSource, 0, 0, imgWidth, imgHeight, imgX, imgY, imgWidth, imgHeight);\n      // crop rotated image\n      const imgData = ctx.getImageData(0, 0, squareWidth, squareHeight);\n      canvas.width = cropWidth;\n      canvas.height = cropHeight;\n      ctx.putImageData(imgData, -cropX, -cropY);\n    } else {\n      canvas.width = cropWidth;\n      canvas.height = cropHeight;\n      ctx.fillStyle = fillColor;\n      ctx.fillRect(0, 0, cropWidth, cropHeight);\n      ctx.drawImage(imgSource, cropX, cropY, cropWidth, cropHeight, 0, 0, cropWidth, cropHeight);\n    }\n    return canvas;\n  }, [fillColor, rotationSlider]);\n  /**\n   * upload\n   */\n  const [modalImage, setModalImage] = useState('');\n  const onCancel = useRef();\n  const onOk = useRef();\n  const runBeforeUpload = useCallback(_a => __awaiter(void 0, [_a], void 0, function* ({\n    beforeUpload,\n    file,\n    resolve,\n    reject\n  }) {\n    const rawFile = file;\n    if (typeof beforeUpload !== 'function') {\n      resolve(rawFile);\n      return;\n    }\n    try {\n      // https://ant.design/components/upload-cn#api\n      // https://github.com/ant-design/ant-design/blob/master/components/upload/Upload.tsx#L152-L178\n      const result = yield beforeUpload(file, [file]);\n      if (result === false) {\n        resolve(false);\n      } else {\n        resolve(result !== true && result || rawFile);\n      }\n    } catch (err) {\n      reject(err);\n    }\n  }), []);\n  const getNewBeforeUpload = useCallback(beforeUpload => {\n    return (file, fileList) => {\n      return new Promise((resolve, reject) => __awaiter(void 0, void 0, void 0, function* () {\n        let processedFile = file;\n        if (typeof cb.current.beforeCrop === 'function') {\n          try {\n            const result = yield cb.current.beforeCrop(file, fileList);\n            if (result === false) {\n              return runBeforeUpload({\n                beforeUpload,\n                file,\n                resolve,\n                reject\n              }); // not open modal\n            }\n            if (result !== true) {\n              processedFile = result || file; // will open modal\n            }\n          } catch (err) {\n            return runBeforeUpload({\n              beforeUpload,\n              file,\n              resolve,\n              reject\n            }); // not open modal\n          }\n        }\n        // read file\n        const reader = new FileReader();\n        reader.addEventListener('load', () => {\n          if (typeof reader.result === 'string') {\n            setModalImage(reader.result); // open modal\n          }\n        });\n        reader.readAsDataURL(processedFile);\n        // on modal cancel\n        onCancel.current = () => {\n          var _a, _b;\n          setModalImage('');\n          easyCropRef.current.onReset();\n          let hasResolveCalled = false;\n          (_b = (_a = cb.current).onModalCancel) === null || _b === void 0 ? void 0 : _b.call(_a, LIST_IGNORE => {\n            resolve(LIST_IGNORE);\n            hasResolveCalled = true;\n          });\n          if (!hasResolveCalled) {\n            resolve(AntUpload.LIST_IGNORE);\n          }\n        };\n        // on modal confirm\n        onOk.current = event => __awaiter(void 0, void 0, void 0, function* () {\n          setModalImage('');\n          easyCropRef.current.onReset();\n          const canvas = getCropCanvas(event.target);\n          const {\n            type,\n            name,\n            uid\n          } = processedFile;\n          canvas.toBlob(blob => __awaiter(void 0, void 0, void 0, function* () {\n            const newFile = new File([blob], name, {\n              type\n            });\n            Object.assign(newFile, {\n              uid\n            });\n            runBeforeUpload({\n              beforeUpload,\n              file: newFile,\n              resolve: file => {\n                var _a, _b;\n                resolve(file);\n                (_b = (_a = cb.current).onModalOk) === null || _b === void 0 ? void 0 : _b.call(_a, file);\n              },\n              reject: err => {\n                var _a, _b;\n                reject(err);\n                (_b = (_a = cb.current).onModalOk) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n              }\n            });\n          }), type, quality);\n        });\n      }));\n    };\n  }, [getCropCanvas, quality, runBeforeUpload]);\n  const getNewUpload = useCallback(children => {\n    const upload = Array.isArray(children) ? children[0] : children;\n    const _a = upload.props,\n      {\n        beforeUpload,\n        accept\n      } = _a,\n      restUploadProps = __rest(_a, [\"beforeUpload\", \"accept\"]);\n    return Object.assign(Object.assign({}, upload), {\n      props: Object.assign(Object.assign({}, restUploadProps), {\n        accept: accept || 'image/*',\n        beforeUpload: getNewBeforeUpload(beforeUpload)\n      })\n    });\n  }, [getNewBeforeUpload]);\n  /**\n   * modal\n   */\n  const modalBaseProps = useMemo(() => {\n    const obj = {};\n    if (modalWidth !== undefined) obj.width = modalWidth;\n    if (modalOk !== undefined) obj.okText = modalOk;\n    if (modalCancel !== undefined) obj.cancelText = modalCancel;\n    return obj;\n  }, [modalCancel, modalOk, modalWidth]);\n  const wrapClassName = `${PREFIX}-modal${modalClassName ? ` ${modalClassName}` : ''}`;\n  const lang = typeof window === 'undefined' ? '' : window.navigator.language;\n  const isCN = lang === 'zh-CN';\n  const title = modalTitle || (isCN ? '编辑图片' : 'Edit image');\n  const resetBtnText = resetText || (isCN ? '重置' : 'Reset');\n  return jsxs(Fragment, {\n    children: [getNewUpload(children), modalImage && jsx(AntModal, Object.assign({}, modalProps, modalBaseProps, {\n      open: true,\n      title: title,\n      onCancel: onCancel.current,\n      onOk: onOk.current,\n      wrapClassName: wrapClassName,\n      maskClosable: false,\n      destroyOnClose: true,\n      children: jsx(EasyCrop$1, {\n        ref: easyCropRef,\n        cropperRef: cropperRef,\n        zoomSlider: zoomSlider,\n        rotationSlider: rotationSlider,\n        aspectSlider: aspectSlider,\n        showReset: showReset,\n        resetBtnText: resetBtnText,\n        modalImage: modalImage,\n        aspect: aspect,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        minAspect: minAspect,\n        maxAspect: maxAspect,\n        cropShape: cropShape,\n        showGrid: showGrid,\n        cropperProps: cropperProps\n      })\n    }))]\n  });\n});\nexport { ImgCrop as default };","map":{"version":3,"names":["__awaiter","__rest","jsxs","Fragment","jsx","AntModal","AntUpload","forwardRef","useState","useRef","useCallback","useImperativeHandle","memo","useMemo","AntButton","AntSlider","Cropper","PREFIX","ZOOM_INITIAL","ZOOM_STEP","ROTATION_INITIAL","ROTATION_MIN","ROTATION_MAX","ROTATION_STEP","ASPECT_STEP","EasyCrop","props","ref","cropperRef","zoomSlider","rotationSlider","aspectSlider","showReset","resetBtnText","modalImage","aspect","ASPECT_INITIAL","minZoom","maxZoom","minAspect","maxAspect","cropShape","showGrid","cropperProps","zoom","setZoom","rotation","setRotation","setAspect","isResetActive","onReset","crop","onCropChange","x","y","cropPixelsRef","width","height","onCropComplete","_","croppedAreaPixels","current","wrapperClass","buttonClass","sliderClass","children","Object","assign","image","zoomWithScroll","onZoomChange","onRotationChange","classes","containerClassName","mediaClassName","className","onClick","toFixed","disabled","min","max","step","value","onChange","style","opacity","pointerEvents","EasyCrop$1","styleInject","css","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","css_248z","ImgCrop","quality","fillColor","resetText","modalClassName","modalTitle","modalWidth","modalOk","modalCancel","onModalOk","onModalCancel","modalProps","beforeCrop","cb","easyCropRef","getCropCanvas","target","_a","canvas","ctx","getContext","context","getRootNode","call","imgSource","querySelector","cropWidth","cropHeight","cropX","cropY","naturalWidth","imgWidth","naturalHeight","imgHeight","angle","Math","PI","sine","abs","sin","cosine","cos","squareWidth","squareHeight","fillStyle","fillRect","squareHalfWidth","squareHalfHeight","translate","rotate","imgX","imgY","drawImage","imgData","getImageData","putImageData","setModalImage","onCancel","onOk","runBeforeUpload","beforeUpload","file","resolve","reject","rawFile","result","err","getNewBeforeUpload","fileList","Promise","processedFile","reader","FileReader","addEventListener","readAsDataURL","_b","hasResolveCalled","LIST_IGNORE","event","name","uid","toBlob","blob","newFile","File","getNewUpload","upload","Array","isArray","accept","restUploadProps","modalBaseProps","obj","undefined","okText","cancelText","wrapClassName","lang","window","navigator","language","isCN","title","open","maskClosable","destroyOnClose","default"],"sources":["/Users/yantinglong/Documents/project/frogather/node_modules/antd-img-crop/dist/antd-img-crop.esm.js"],"sourcesContent":["import { __awaiter, __rest } from 'tslib';\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport AntModal from 'antd/es/modal';\nimport AntUpload from 'antd/es/upload';\nimport { forwardRef, useState, useRef, useCallback, useImperativeHandle, memo, useMemo } from 'react';\nimport AntButton from 'antd/es/button';\nimport AntSlider from 'antd/es/slider';\nimport Cropper from 'react-easy-crop';\n\nconst PREFIX = 'img-crop';\nconst ZOOM_INITIAL = 1;\nconst ZOOM_STEP = 0.1;\nconst ROTATION_INITIAL = 0;\nconst ROTATION_MIN = -180;\nconst ROTATION_MAX = 180;\nconst ROTATION_STEP = 1;\nconst ASPECT_STEP = 0.01;\n\nconst EasyCrop = forwardRef((props, ref) => {\n    const { cropperRef, zoomSlider, rotationSlider, aspectSlider, showReset, resetBtnText, modalImage, aspect: ASPECT_INITIAL, minZoom, maxZoom, minAspect, maxAspect, cropShape, showGrid, cropperProps, } = props;\n    const [zoom, setZoom] = useState(ZOOM_INITIAL);\n    const [rotation, setRotation] = useState(ROTATION_INITIAL);\n    const [aspect, setAspect] = useState(ASPECT_INITIAL);\n    const isResetActive = zoom !== ZOOM_INITIAL ||\n        rotation !== ROTATION_INITIAL ||\n        aspect !== ASPECT_INITIAL;\n    const onReset = () => {\n        setZoom(ZOOM_INITIAL);\n        setRotation(ROTATION_INITIAL);\n        setAspect(ASPECT_INITIAL);\n    };\n    const [crop, onCropChange] = useState({ x: 0, y: 0 });\n    const cropPixelsRef = useRef({ width: 0, height: 0, x: 0, y: 0 });\n    const onCropComplete = useCallback((_, croppedAreaPixels) => {\n        cropPixelsRef.current = croppedAreaPixels;\n    }, []);\n    useImperativeHandle(ref, () => ({\n        rotation,\n        cropPixelsRef,\n        onReset,\n    }));\n    const wrapperClass = '[display:flex] [align-items:center] [width:60%] [margin-inline:auto]';\n    const buttonClass = '[display:flex] [align-items:center] [justify-content:center] [height:32px] [width:32px] [background:transparent] [border:0] [font-family:inherit] [font-size:18px] [cursor:pointer] disabled:[opacity:20%] disabled:[cursor:default]';\n    const sliderClass = '[flex:1]';\n    return (jsxs(Fragment, { children: [jsx(Cropper, Object.assign({}, cropperProps, { ref: cropperRef, image: modalImage, crop: crop, \n                //\n                zoom: zoom, rotation: rotation, aspect: aspect, minZoom: minZoom, maxZoom: maxZoom, zoomWithScroll: zoomSlider, \n                //\n                cropShape: cropShape, showGrid: showGrid, onCropChange: onCropChange, onZoomChange: setZoom, onRotationChange: setRotation, onCropComplete: onCropComplete, classes: {\n                    containerClassName: `${PREFIX}-container ![position:relative] [width:100%] [height:40vh] [&~section:first-of-type]:[margin-top:16px] [&~section:last-of-type]:[margin-bottom:16px]`,\n                    mediaClassName: `${PREFIX}-media`,\n                } })), zoomSlider && (jsxs(\"section\", { className: `${PREFIX}-control ${PREFIX}-control-zoom ${wrapperClass}`, children: [jsx(\"button\", { className: buttonClass, onClick: () => setZoom(+(zoom - ZOOM_STEP).toFixed(1)), disabled: zoom - ZOOM_STEP < minZoom, children: \"\\uFF0D\" }), jsx(AntSlider, { className: sliderClass, min: minZoom, max: maxZoom, step: ZOOM_STEP, value: zoom, onChange: setZoom }), jsx(\"button\", { className: buttonClass, onClick: () => setZoom(+(zoom + ZOOM_STEP).toFixed(1)), disabled: zoom + ZOOM_STEP > maxZoom, children: \"\\uFF0B\" })] })), rotationSlider && (jsxs(\"section\", { className: `${PREFIX}-control ${PREFIX}-control-rotation ${wrapperClass}`, children: [jsx(\"button\", { className: `${buttonClass} [font-size:16px]`, onClick: () => setRotation(rotation - ROTATION_STEP), disabled: rotation === ROTATION_MIN, children: \"\\u21BA\" }), jsx(AntSlider, { className: sliderClass, min: ROTATION_MIN, max: ROTATION_MAX, step: ROTATION_STEP, value: rotation, onChange: setRotation }), jsx(\"button\", { className: `${buttonClass} [font-size:16px]`, onClick: () => setRotation(rotation + ROTATION_STEP), disabled: rotation === ROTATION_MAX, children: \"\\u21BB\" })] })), aspectSlider && (jsxs(\"section\", { className: `${PREFIX}-control ${PREFIX}-control-aspect ${wrapperClass}`, children: [jsx(\"button\", { className: buttonClass, onClick: () => setAspect(+(aspect - ASPECT_STEP).toFixed(2)), disabled: aspect - ASPECT_STEP < minAspect, children: \"\\u2195\" }), jsx(AntSlider, { className: sliderClass, min: minAspect, max: maxAspect, step: ASPECT_STEP, value: aspect, onChange: setAspect }), jsx(\"button\", { className: buttonClass, onClick: () => setAspect(+(aspect + ASPECT_STEP).toFixed(2)), disabled: aspect + ASPECT_STEP > maxAspect, children: \"\\u2194\" })] })), showReset && (zoomSlider || rotationSlider || aspectSlider) && (jsx(AntButton, { className: \"[bottom:20px] [position:absolute]\", style: isResetActive ? {} : { opacity: 0.3, pointerEvents: 'none' }, onClick: onReset, children: resetBtnText }))] }));\n});\nvar EasyCrop$1 = memo(EasyCrop);\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".\\\\[align-items\\\\:center\\\\]{align-items:center}.\\\\[background\\\\:transparent\\\\]{background:transparent}.\\\\[border\\\\:0\\\\]{border:0}.\\\\[bottom\\\\:20px\\\\]{bottom:20px}.\\\\[cursor\\\\:pointer\\\\]{cursor:pointer}.\\\\[display\\\\:flex\\\\]{display:flex}.\\\\[flex\\\\:1\\\\]{flex:1}.\\\\[font-family\\\\:inherit\\\\]{font-family:inherit}.\\\\[font-size\\\\:16px\\\\]{font-size:16px}.\\\\[font-size\\\\:18px\\\\]{font-size:18px}.\\\\[height\\\\:32px\\\\]{height:32px}.\\\\[height\\\\:40vh\\\\]{height:40vh}.\\\\[justify-content\\\\:center\\\\]{justify-content:center}.\\\\[margin-inline\\\\:auto\\\\]{margin-inline:auto}.\\\\[position\\\\:absolute\\\\]{position:absolute}.\\\\!\\\\[position\\\\:relative\\\\]{position:relative!important}.\\\\[width\\\\:100\\\\%\\\\]{width:100%}.\\\\[width\\\\:32px\\\\]{width:32px}.\\\\[width\\\\:60\\\\%\\\\]{width:60%}.disabled\\\\:\\\\[cursor\\\\:default\\\\]:disabled{cursor:default}.disabled\\\\:\\\\[opacity\\\\:20\\\\%\\\\]:disabled{opacity:20%}.\\\\[\\\\&\\\\~section\\\\:first-of-type\\\\]\\\\:\\\\[margin-top\\\\:16px\\\\]~section:first-of-type{margin-top:16px}.\\\\[\\\\&\\\\~section\\\\:last-of-type\\\\]\\\\:\\\\[margin-bottom\\\\:16px\\\\]~section:last-of-type{margin-bottom:16px}\";\nstyleInject(css_248z,{\"insertAt\":\"top\"});\n\nconst ImgCrop = forwardRef((props, cropperRef) => {\n    const { quality = 0.4, fillColor = 'white', zoomSlider = true, rotationSlider = false, aspectSlider = false, showReset = false, resetText, aspect = 1, minZoom = 1, maxZoom = 3, minAspect = 0.5, maxAspect = 2, cropShape = 'rect', showGrid = false, cropperProps, modalClassName, modalTitle, modalWidth, modalOk, modalCancel, onModalOk, onModalCancel, modalProps, beforeCrop, children, } = props;\n    const cb = useRef({});\n    cb.current.onModalOk = onModalOk;\n    cb.current.onModalCancel = onModalCancel;\n    cb.current.beforeCrop = beforeCrop;\n    /**\n     * crop\n     */\n    const easyCropRef = useRef(null);\n    const getCropCanvas = useCallback((target) => {\n        var _a;\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        const context = ((_a = target === null || target === void 0 ? void 0 : target.getRootNode) === null || _a === void 0 ? void 0 : _a.call(target)) || document;\n        const imgSource = context.querySelector(`.${PREFIX}-media`);\n        const { width: cropWidth, height: cropHeight, x: cropX, y: cropY, } = easyCropRef.current.cropPixelsRef.current;\n        if (rotationSlider &&\n            easyCropRef.current.rotation !== ROTATION_INITIAL) {\n            const { naturalWidth: imgWidth, naturalHeight: imgHeight } = imgSource;\n            const angle = easyCropRef.current.rotation * (Math.PI / 180);\n            // get container for rotated image\n            const sine = Math.abs(Math.sin(angle));\n            const cosine = Math.abs(Math.cos(angle));\n            const squareWidth = imgWidth * cosine + imgHeight * sine;\n            const squareHeight = imgHeight * cosine + imgWidth * sine;\n            canvas.width = squareWidth;\n            canvas.height = squareHeight;\n            ctx.fillStyle = fillColor;\n            ctx.fillRect(0, 0, squareWidth, squareHeight);\n            // rotate container\n            const squareHalfWidth = squareWidth / 2;\n            const squareHalfHeight = squareHeight / 2;\n            ctx.translate(squareHalfWidth, squareHalfHeight);\n            ctx.rotate(angle);\n            ctx.translate(-squareHalfWidth, -squareHalfHeight);\n            // draw rotated image\n            const imgX = (squareWidth - imgWidth) / 2;\n            const imgY = (squareHeight - imgHeight) / 2;\n            ctx.drawImage(imgSource, 0, 0, imgWidth, imgHeight, imgX, imgY, imgWidth, imgHeight);\n            // crop rotated image\n            const imgData = ctx.getImageData(0, 0, squareWidth, squareHeight);\n            canvas.width = cropWidth;\n            canvas.height = cropHeight;\n            ctx.putImageData(imgData, -cropX, -cropY);\n        }\n        else {\n            canvas.width = cropWidth;\n            canvas.height = cropHeight;\n            ctx.fillStyle = fillColor;\n            ctx.fillRect(0, 0, cropWidth, cropHeight);\n            ctx.drawImage(imgSource, cropX, cropY, cropWidth, cropHeight, 0, 0, cropWidth, cropHeight);\n        }\n        return canvas;\n    }, [fillColor, rotationSlider]);\n    /**\n     * upload\n     */\n    const [modalImage, setModalImage] = useState('');\n    const onCancel = useRef();\n    const onOk = useRef();\n    const runBeforeUpload = useCallback((_a) => __awaiter(void 0, [_a], void 0, function* ({ beforeUpload, file, resolve, reject, }) {\n        const rawFile = file;\n        if (typeof beforeUpload !== 'function') {\n            resolve(rawFile);\n            return;\n        }\n        try {\n            // https://ant.design/components/upload-cn#api\n            // https://github.com/ant-design/ant-design/blob/master/components/upload/Upload.tsx#L152-L178\n            const result = yield beforeUpload(file, [file]);\n            if (result === false) {\n                resolve(false);\n            }\n            else {\n                resolve((result !== true && result) || rawFile);\n            }\n        }\n        catch (err) {\n            reject(err);\n        }\n    }), []);\n    const getNewBeforeUpload = useCallback((beforeUpload) => {\n        return ((file, fileList) => {\n            return new Promise((resolve, reject) => __awaiter(void 0, void 0, void 0, function* () {\n                let processedFile = file;\n                if (typeof cb.current.beforeCrop === 'function') {\n                    try {\n                        const result = yield cb.current.beforeCrop(file, fileList);\n                        if (result === false) {\n                            return runBeforeUpload({ beforeUpload, file, resolve, reject }); // not open modal\n                        }\n                        if (result !== true) {\n                            processedFile = result || file; // will open modal\n                        }\n                    }\n                    catch (err) {\n                        return runBeforeUpload({ beforeUpload, file, resolve, reject }); // not open modal\n                    }\n                }\n                // read file\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setModalImage(reader.result); // open modal\n                    }\n                });\n                reader.readAsDataURL(processedFile);\n                // on modal cancel\n                onCancel.current = () => {\n                    var _a, _b;\n                    setModalImage('');\n                    easyCropRef.current.onReset();\n                    let hasResolveCalled = false;\n                    (_b = (_a = cb.current).onModalCancel) === null || _b === void 0 ? void 0 : _b.call(_a, (LIST_IGNORE) => {\n                        resolve(LIST_IGNORE);\n                        hasResolveCalled = true;\n                    });\n                    if (!hasResolveCalled) {\n                        resolve(AntUpload.LIST_IGNORE);\n                    }\n                };\n                // on modal confirm\n                onOk.current = (event) => __awaiter(void 0, void 0, void 0, function* () {\n                    setModalImage('');\n                    easyCropRef.current.onReset();\n                    const canvas = getCropCanvas(event.target);\n                    const { type, name, uid } = processedFile;\n                    canvas.toBlob((blob) => __awaiter(void 0, void 0, void 0, function* () {\n                        const newFile = new File([blob], name, { type });\n                        Object.assign(newFile, { uid });\n                        runBeforeUpload({\n                            beforeUpload,\n                            file: newFile,\n                            resolve: (file) => {\n                                var _a, _b;\n                                resolve(file);\n                                (_b = (_a = cb.current).onModalOk) === null || _b === void 0 ? void 0 : _b.call(_a, file);\n                            },\n                            reject: (err) => {\n                                var _a, _b;\n                                reject(err);\n                                (_b = (_a = cb.current).onModalOk) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n                            },\n                        });\n                    }), type, quality);\n                });\n            }));\n        });\n    }, [getCropCanvas, quality, runBeforeUpload]);\n    const getNewUpload = useCallback((children) => {\n        const upload = Array.isArray(children) ? children[0] : children;\n        const _a = upload.props, { beforeUpload, accept } = _a, restUploadProps = __rest(_a, [\"beforeUpload\", \"accept\"]);\n        return Object.assign(Object.assign({}, upload), { props: Object.assign(Object.assign({}, restUploadProps), { accept: accept || 'image/*', beforeUpload: getNewBeforeUpload(beforeUpload) }) });\n    }, [getNewBeforeUpload]);\n    /**\n     * modal\n     */\n    const modalBaseProps = useMemo(() => {\n        const obj = {};\n        if (modalWidth !== undefined)\n            obj.width = modalWidth;\n        if (modalOk !== undefined)\n            obj.okText = modalOk;\n        if (modalCancel !== undefined)\n            obj.cancelText = modalCancel;\n        return obj;\n    }, [modalCancel, modalOk, modalWidth]);\n    const wrapClassName = `${PREFIX}-modal${modalClassName ? ` ${modalClassName}` : ''}`;\n    const lang = typeof window === 'undefined' ? '' : window.navigator.language;\n    const isCN = lang === 'zh-CN';\n    const title = modalTitle || (isCN ? '编辑图片' : 'Edit image');\n    const resetBtnText = resetText || (isCN ? '重置' : 'Reset');\n    return (jsxs(Fragment, { children: [getNewUpload(children), modalImage && (jsx(AntModal, Object.assign({}, modalProps, modalBaseProps, { open: true, title: title, onCancel: onCancel.current, onOk: onOk.current, wrapClassName: wrapClassName, maskClosable: false, destroyOnClose: true, children: jsx(EasyCrop$1, { ref: easyCropRef, cropperRef: cropperRef, zoomSlider: zoomSlider, rotationSlider: rotationSlider, aspectSlider: aspectSlider, showReset: showReset, resetBtnText: resetBtnText, modalImage: modalImage, aspect: aspect, minZoom: minZoom, maxZoom: maxZoom, minAspect: minAspect, maxAspect: maxAspect, cropShape: cropShape, showGrid: showGrid, cropperProps: cropperProps }) })))] }));\n});\n\nexport { ImgCrop as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
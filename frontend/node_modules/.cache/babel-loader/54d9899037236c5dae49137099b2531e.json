{"ast":null,"code":"/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport FeatureFormat, { transformGeometryWithOptions } from './Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport Units from '../proj/Units.js';\nimport { assert } from '../asserts.js';\nimport { get } from '../proj.js';\nimport { inflateEnds } from '../geom/flat/orient.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [opt_options] Options.\n * @api\n */\nvar MVT = /** @class */function (_super) {\n  __extends(MVT, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  function MVT(opt_options) {\n    var _this = _super.call(this) || this;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @type {Projection}\n     */\n    _this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    _this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    _this.geometryName_ = options.geometryName;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.layerName_ = options.layerName ? options.layerName : 'layer';\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    _this.layers_ = options.layers ? options.layers : null;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.idProperty_ = options.idProperty;\n    _this.supportedMediaTypes = ['application/vnd.mapbox-vector-tile', 'application/x-protobuf'];\n    return _this;\n  }\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  MVT.prototype.readRawGeometry_ = function (pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n    var end = pbf.readVarint() + pbf.pos;\n    var cmd = 1;\n    var length = 0;\n    var x = 0;\n    var y = 0;\n    var coordsLen = 0;\n    var currentEnd = 0;\n    while (pbf.pos < end) {\n      if (!length) {\n        var cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n      length--;\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  };\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  MVT.prototype.createFeature_ = function (pbf, rawFeature, options) {\n    var type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n    var feature;\n    var values = rawFeature.properties;\n    var id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n    values[this.layerName_] = rawFeature.layer.name;\n    var flatCoordinates = /** @type {Array<number>} */[];\n    var ends = /** @type {Array<number>} */[];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n    var geometryType = getGeometryType(type, ends.length);\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      var geom = void 0;\n      if (geometryType == 'Polygon') {\n        var endss = inflateEnds(flatCoordinates, ends);\n        geom = endss.length > 1 ? new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss) : new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n      } else {\n        geom = geometryType === 'Point' ? new Point(flatCoordinates, GeometryLayout.XY) : geometryType === 'LineString' ? new LineString(flatCoordinates, GeometryLayout.XY) : geometryType === 'MultiPoint' ? new MultiPoint(flatCoordinates, GeometryLayout.XY) : geometryType === 'MultiLineString' ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) : null;\n      }\n      var ctor = /** @type {typeof import(\"../Feature.js\").default} */this.featureClass_;\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      var geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n    return feature;\n  };\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  MVT.prototype.getType = function () {\n    return 'arraybuffer';\n  };\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  MVT.prototype.readFeatures = function (source, opt_options) {\n    var layers = this.layers_;\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */this.adaptOptions(opt_options);\n    var dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n    var pbf = new PBF(/** @type {ArrayBuffer} */source);\n    var pbfLayers = pbf.readFields(layersPBFReader, {});\n    var features = [];\n    for (var name_1 in pbfLayers) {\n      if (layers && layers.indexOf(name_1) == -1) {\n        continue;\n      }\n      var pbfLayer = pbfLayers[name_1];\n      var extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n      for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        var rawFeature = readRawFeature(pbf, pbfLayer, i);\n        var feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n    return features;\n  };\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  MVT.prototype.readProjection = function (source) {\n    return this.dataProjection;\n  };\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  MVT.prototype.setLayers = function (layers) {\n    this.layers_ = layers;\n  };\n  return MVT;\n}(FeatureFormat);\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    var layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    var end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    var value = null;\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() : tag === 2 ? pbf.readFloat() : tag === 3 ? pbf.readDouble() : tag === 4 ? pbf.readVarint64() : tag === 5 ? pbf.readVarint() : tag === 6 ? pbf.readSVarint() : tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      var key = feature.layer.keys[pbf.readVarint()];\n      var value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  var end = pbf.readVarint() + pbf.pos;\n  var feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  var geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\nexport default MVT;","map":{"version":3,"names":["FeatureFormat","transformGeometryWithOptions","GeometryLayout","LineString","MultiLineString","MultiPoint","MultiPolygon","PBF","Point","Polygon","Projection","RenderFeature","Units","assert","get","inflateEnds","MVT","_super","__extends","opt_options","_this","call","options","dataProjection","code","units","TILE_PIXELS","featureClass_","featureClass","geometryName_","geometryName","layerName_","layerName","layers_","layers","idProperty_","idProperty","supportedMediaTypes","prototype","readRawGeometry_","pbf","feature","flatCoordinates","ends","pos","geometry","end","readVarint","cmd","length","x","y","coordsLen","currentEnd","cmdLen","readSVarint","push","createFeature_","rawFeature","type","values","properties","id","layer","name","geometryType","getGeometryType","transform","geom","endss","XY","ctor","setGeometryName","setGeometry","undefined","setId","setProperties","getType","readFeatures","source","adaptOptions","setWorldExtent","extent","pbfLayers","readFields","layersPBFReader","features","name_1","indexOf","pbfLayer","setExtent","i","ii","readRawFeature","readProjection","setLayers","tag","keys","layerPBFReader","version","readString","value","readFloat","readDouble","readVarint64","readBoolean","featurePBFReader","key","numEnds"],"sources":["../src/format/MVT.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
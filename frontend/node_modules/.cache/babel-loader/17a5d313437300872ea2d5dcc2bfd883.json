{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, { Attributes, Uniforms } from '../renderer/webgl/TileLayer.js';\nimport { PALETTE_TEXTURE_ARRAY, ValueTypes, expressionToGlsl, getStringNumberEquivalent, uniformNameForVariable } from '../style/expressions.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../style/expressions.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  var vertexShader = \"\\n    attribute vec2 \".concat(Attributes.TEXTURE_COORD, \";\\n    uniform mat4 \").concat(Uniforms.TILE_TRANSFORM, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n    uniform float \").concat(Uniforms.TEXTURE_RESOLUTION, \";\\n    uniform float \").concat(Uniforms.TEXTURE_ORIGIN_X, \";\\n    uniform float \").concat(Uniforms.TEXTURE_ORIGIN_Y, \";\\n    uniform float \").concat(Uniforms.DEPTH, \";\\n\\n    varying vec2 v_textureCoord;\\n    varying vec2 v_mapCoord;\\n\\n    void main() {\\n      v_textureCoord = \").concat(Attributes.TEXTURE_COORD, \";\\n      v_mapCoord = vec2(\\n        \").concat(Uniforms.TEXTURE_ORIGIN_X, \" + \").concat(Uniforms.TEXTURE_RESOLUTION, \" * \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \" * v_textureCoord[0],\\n        \").concat(Uniforms.TEXTURE_ORIGIN_Y, \" - \").concat(Uniforms.TEXTURE_RESOLUTION, \" * \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \" * v_textureCoord[1]\\n      );\\n      gl_Position = \").concat(Uniforms.TILE_TRANSFORM, \" * vec4(\").concat(Attributes.TEXTURE_COORD, \", \").concat(Uniforms.DEPTH, \", 1.0);\\n    }\\n  \");\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  var context = {\n    inFragmentShader: true,\n    variables: [],\n    attributes: [],\n    stringLiteralsMap: {},\n    functions: {},\n    bandCount: bandCount\n  };\n  var pipeline = [];\n  if (style.color !== undefined) {\n    var color = expressionToGlsl(context, style.color, ValueTypes.COLOR);\n    pipeline.push(\"color = \".concat(color, \";\"));\n  }\n  if (style.contrast !== undefined) {\n    var contrast = expressionToGlsl(context, style.contrast, ValueTypes.NUMBER);\n    pipeline.push(\"color.rgb = clamp((\".concat(contrast, \" + 1.0) * color.rgb - (\").concat(contrast, \" / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n  }\n  if (style.exposure !== undefined) {\n    var exposure = expressionToGlsl(context, style.exposure, ValueTypes.NUMBER);\n    pipeline.push(\"color.rgb = clamp((\".concat(exposure, \" + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n  }\n  if (style.saturation !== undefined) {\n    var saturation = expressionToGlsl(context, style.saturation, ValueTypes.NUMBER);\n    pipeline.push(\"\\n      float saturation = \".concat(saturation, \" + 1.0;\\n      float sr = (1.0 - saturation) * 0.2126;\\n      float sg = (1.0 - saturation) * 0.7152;\\n      float sb = (1.0 - saturation) * 0.0722;\\n      mat3 saturationMatrix = mat3(\\n        sr + saturation, sr, sr,\\n        sg, sg + saturation, sg,\\n        sb, sb, sb + saturation\\n      );\\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\\n    \"));\n  }\n  if (style.gamma !== undefined) {\n    var gamma = expressionToGlsl(context, style.gamma, ValueTypes.NUMBER);\n    pipeline.push(\"color.rgb = pow(color.rgb, vec3(1.0 / \".concat(gamma, \"));\"));\n  }\n  if (style.brightness !== undefined) {\n    var brightness = expressionToGlsl(context, style.brightness, ValueTypes.NUMBER);\n    pipeline.push(\"color.rgb = clamp(color.rgb + \".concat(brightness, \", vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n  }\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  var uniforms = {};\n  var numVariables = context.variables.length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\"Missing variables in style (expected \".concat(context.variables, \")\"));\n  }\n  var _loop_1 = function (i) {\n    var variableName = context.variables[i];\n    if (!(variableName in style.variables)) {\n      throw new Error(\"Missing '\".concat(variableName, \"' in style variables\"));\n    }\n    var uniformName = uniformNameForVariable(variableName);\n    uniforms[uniformName] = function () {\n      var value = style.variables[variableName];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(context, value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  };\n  for (var i = 0; i < numVariables; ++i) {\n    _loop_1(i);\n  }\n  var uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return \"uniform float \".concat(name, \";\");\n  });\n  var textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\"uniform sampler2D \".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(textureCount, \"];\"));\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\"uniform sampler2D \".concat(PALETTE_TEXTURE_ARRAY, \"[\").concat(context.paletteTextures.length, \"];\"));\n  }\n  var functionDefintions = Object.keys(context.functions).map(function (name) {\n    return context.functions[name];\n  });\n  var fragmentShader = \"\\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\\n    precision highp float;\\n    #else\\n    precision mediump float;\\n    #endif\\n\\n    varying vec2 v_textureCoord;\\n    varying vec2 v_mapCoord;\\n    uniform vec4 \".concat(Uniforms.RENDER_EXTENT, \";\\n    uniform float \").concat(Uniforms.TRANSITION_ALPHA, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n    uniform float \").concat(Uniforms.RESOLUTION, \";\\n    uniform float \").concat(Uniforms.ZOOM, \";\\n\\n    \").concat(uniformDeclarations.join('\\n'), \"\\n\\n    \").concat(functionDefintions.join('\\n'), \"\\n\\n    void main() {\\n      if (\\n        v_mapCoord[0] < \").concat(Uniforms.RENDER_EXTENT, \"[0] ||\\n        v_mapCoord[1] < \").concat(Uniforms.RENDER_EXTENT, \"[1] ||\\n        v_mapCoord[0] > \").concat(Uniforms.RENDER_EXTENT, \"[2] ||\\n        v_mapCoord[1] > \").concat(Uniforms.RENDER_EXTENT, \"[3]\\n      ) {\\n        discard;\\n      }\\n\\n      vec4 color = texture2D(\").concat(Uniforms.TILE_TEXTURE_ARRAY, \"[0],  v_textureCoord);\\n\\n      \").concat(pipeline.join('\\n'), \"\\n\\n      if (color.a == 0.0) {\\n        discard;\\n      }\\n\\n      gl_FragColor = color;\\n      gl_FragColor.rgb *= gl_FragColor.a;\\n      gl_FragColor *= \").concat(Uniforms.TRANSITION_ALPHA, \";\\n    }\");\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures\n  };\n}\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar WebGLTileLayer = /** @class */function (_super) {\n  __extends(WebGLTileLayer, _super);\n  /**\n   * @param {Options} opt_options Tile layer options.\n   */\n  function WebGLTileLayer(opt_options) {\n    var _this = this;\n    var options = opt_options ? assign({}, opt_options) : {};\n    var style = options.style || {};\n    delete options.style;\n    var cacheSize = options.cacheSize;\n    delete options.cacheSize;\n    _this = _super.call(this, options) || this;\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    _this.sources_ = options.sources;\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    _this.renderedSource_ = null;\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.renderedResolution_ = NaN;\n    /**\n     * @type {Style}\n     * @private\n     */\n    _this.style_ = style;\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.cacheSize_ = cacheSize;\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    _this.styleVariables_ = _this.style_.variables || {};\n    _this.addChangeListener(LayerProperty.SOURCE, _this.handleSourceUpdate_);\n    return _this;\n  }\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  WebGLTileLayer.prototype.getSources = function (extent, resolution) {\n    var source = this.getSource();\n    return this.sources_ ? typeof this.sources_ === 'function' ? this.sources_(extent, resolution) : this.sources_ : source ? [source] : [];\n  };\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n  WebGLTileLayer.prototype.getRenderSource = function () {\n    return this.renderedSource_ || this.getSource();\n  };\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  WebGLTileLayer.prototype.getSourceState = function () {\n    var source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  };\n  /**\n   * @private\n   */\n  WebGLTileLayer.prototype.handleSourceUpdate_ = function () {\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  };\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  WebGLTileLayer.prototype.getSourceBandCount_ = function () {\n    var max = Number.MAX_SAFE_INTEGER;\n    var sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0] ? sources[0].bandCount : 4;\n  };\n  WebGLTileLayer.prototype.createRenderer = function () {\n    var parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures\n    });\n  };\n  /**\n   * @param {import(\"../PluggableMap\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  WebGLTileLayer.prototype.renderSources = function (frameState, sources) {\n    var layerRenderer = this.getRenderer();\n    var canvas;\n    for (var i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  };\n  /**\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  WebGLTileLayer.prototype.render = function (frameState, target) {\n    var _this = this;\n    this.rendered = true;\n    var viewState = frameState.viewState;\n    var sources = this.getSources(frameState.extent, viewState.resolution);\n    var ready = true;\n    var _loop_2 = function (i, ii) {\n      var source = sources[i];\n      var sourceState = source.getState();\n      if (sourceState == 'loading') {\n        var onChange_1 = function () {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange_1);\n            _this.changed();\n          }\n        };\n        source.addEventListener('change', onChange_1);\n      }\n      ready = ready && sourceState == 'ready';\n    };\n    for (var i = 0, ii = sources.length; i < ii; ++i) {\n      _loop_2(i, ii);\n    }\n    var canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      var altSources = this.getSources(frameState.extent, this.renderedResolution_).filter(function (source) {\n        return !sources.includes(source);\n      });\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  };\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  WebGLTileLayer.prototype.setStyle = function (style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    var parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    var renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      paletteTextures: parsedStyle.paletteTextures\n    });\n    this.changed();\n  };\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  WebGLTileLayer.prototype.updateStyleVariables = function (variables) {\n    assign(this.styleVariables_, variables);\n    this.changed();\n  };\n  return WebGLTileLayer;\n}(BaseTileLayer);\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\nexport default WebGLTileLayer;","map":{"version":3,"names":["BaseTileLayer","LayerProperty","WebGLTileLayerRenderer","Attributes","Uniforms","PALETTE_TEXTURE_ARRAY","ValueTypes","expressionToGlsl","getStringNumberEquivalent","uniformNameForVariable","assign","parseStyle","style","bandCount","vertexShader","concat","TEXTURE_COORD","TILE_TRANSFORM","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","DEPTH","context","inFragmentShader","variables","attributes","stringLiteralsMap","functions","pipeline","color","undefined","COLOR","push","contrast","NUMBER","exposure","saturation","gamma","brightness","uniforms","numVariables","length","Error","i","variableName","uniformName","value","uniformDeclarations","Object","keys","map","name","textureCount","Math","ceil","TILE_TEXTURE_ARRAY","paletteTextures","functionDefintions","fragmentShader","RENDER_EXTENT","TRANSITION_ALPHA","RESOLUTION","ZOOM","join","WebGLTileLayer","_super","__extends","opt_options","_this","options","cacheSize","call","sources_","sources","renderedSource_","renderedResolution_","NaN","style_","cacheSize_","styleVariables_","addChangeListener","SOURCE","handleSourceUpdate_","prototype","getSources","extent","resolution","source","getSource","getRenderSource","getSourceState","getState","setStyle","getSourceBandCount_","max","Number","MAX_SAFE_INTEGER","createRenderer","parsedStyle","renderSources","frameState","layerRenderer","getRenderer","canvas","ii","prepareFrame","renderFrame","render","target","rendered","viewState","ready","sourceState","onChange_1","removeEventListener","changed","addEventListener","renderComplete","altSources","filter","includes","renderer","reset","updateStyleVariables","dispose"],"sources":["../src/layer/WebGLTile.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
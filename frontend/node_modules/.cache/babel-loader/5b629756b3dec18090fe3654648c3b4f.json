{"ast":null,"code":"/**\n * @module ol/webgl/PostProcessingPass\n */\nimport { getUid } from '../util.js';\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n  uniform float u_opacity;\\n   \\n  varying vec2 v_texCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */function () {\n  /**\n   * @param {Options} options Options.\n   */\n  function WebGLPostProcessingPass(options) {\n    this.gl_ = options.webGlContext;\n    var gl = this.gl_;\n    this.scaleRatio_ = options.scaleRatio || 1;\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n    this.frameBuffer_ = gl.createFramebuffer();\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n    gl.compileShader(vertexShader);\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    var verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_opacity');\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms && Object.keys(options.uniforms).forEach(function (name) {\n      this.uniforms_.push({\n        value: options.uniforms[name],\n        location: gl.getUniformLocation(this.renderTargetProgram_, name)\n      });\n    }.bind(this));\n  }\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  WebGLPostProcessingPass.prototype.getGL = function () {\n    return this.gl_;\n  };\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  WebGLPostProcessingPass.prototype.init = function (frameState) {\n    var gl = this.getGL();\n    var textureSize = [gl.drawingBufferWidth * this.scaleRatio_, gl.drawingBufferHeight * this.scaleRatio_];\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n    // if size has changed: adjust canvas & render target texture\n    if (!this.renderTargetTextureSize_ || this.renderTargetTextureSize_[0] !== textureSize[0] || this.renderTargetTextureSize_[1] !== textureSize[1]) {\n      this.renderTargetTextureSize_ = textureSize;\n      // create a new texture\n      var level = 0;\n      var internalFormat = gl.RGBA;\n      var border = 0;\n      var format = gl.RGBA;\n      var type = gl.UNSIGNED_BYTE;\n      var data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, textureSize[0], textureSize[1], border, format, type, data);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n    }\n  };\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [postCompose] Called before composing.\n   * @api\n   */\n  WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass, preCompose, postCompose) {\n    var gl = this.getGL();\n    var size = frameState.size;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      var canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        var attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n    var opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n    this.applyUniforms(frameState);\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  };\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n    return this.frameBuffer_;\n  };\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n    var gl = this.getGL();\n    var value;\n    var textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[\"TEXTURE\".concat(textureSlot)]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        if (value instanceof ImageData) {\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n        } else {\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n        }\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  };\n  return WebGLPostProcessingPass;\n}();\nexport default WebGLPostProcessingPass;","map":{"version":3,"names":["getUid","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","WebGLPostProcessingPass","options","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","verticesArray","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","Object","keys","forEach","name","push","value","location","bind","prototype","getGL","init","frameState","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","level","internalFormat","RGBA","border","format","type","UNSIGNED_BYTE","data","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","apply","nextPass","preCompose","postCompose","size","activeTexture","TEXTURE0","canvasId","canvas","renderTargets","attributes","getContextAttributes","preserveDrawingBuffer","clearColor","clear","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","opacity","layerStatesArray","layerIndex","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","ImageData","texture","concat","width","height","Uint8Array","Array","isArray","length","uniform3f","uniform4f"],"sources":["../src/webgl/PostProcessingPass.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
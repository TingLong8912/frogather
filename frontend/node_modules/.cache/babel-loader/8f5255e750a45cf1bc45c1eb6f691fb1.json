{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/MapboxVector\n */\nimport BaseEvent from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport MVT from '../format/MVT.js';\nimport VectorTileLayer from '../layer/VectorTile.js';\nimport VectorTileSource from '../source/VectorTile.js';\nimport { applyBackground, applyStyle } from 'ol-mapbox-style';\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nvar ErrorEvent = /** @class */function (_super) {\n  __extends(ErrorEvent, _super);\n  /**\n   * @param {Error} error error object.\n   */\n  function ErrorEvent(error) {\n    var _this = _super.call(this, EventType.ERROR) || this;\n    /**\n     * @type {Error}\n     */\n    _this.error = error;\n    return _this;\n  }\n  return ErrorEvent;\n}(BaseEvent);\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here'\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nvar MapboxVectorLayer = /** @class */function (_super) {\n  __extends(MapboxVectorLayer, _super);\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  function MapboxVectorLayer(options) {\n    var _this = this;\n    var declutter = 'declutter' in options ? options.declutter : true;\n    var source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT()\n    });\n    _this = _super.call(this, {\n      source: source,\n      background: options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties\n    }) || this;\n    if (options.accessToken) {\n      _this.accessToken = options.accessToken;\n    }\n    var url = options.styleUrl;\n    applyStyle(_this, url, options.layers || options.source, {\n      accessToken: _this.accessToken\n    }).then(function () {\n      source.setState('ready');\n    }).catch(function (error) {\n      _this.dispatchEvent(new ErrorEvent(error));\n      var source = _this.getSource();\n      source.setState('error');\n    });\n    if (_this.getBackground() === undefined) {\n      applyBackground(_this, options.styleUrl, {\n        accessToken: _this.accessToken\n      });\n    }\n    return _this;\n  }\n  return MapboxVectorLayer;\n}(VectorTileLayer);\nexport default MapboxVectorLayer;","map":{"version":3,"names":["BaseEvent","EventType","MVT","VectorTileLayer","VectorTileSource","applyBackground","applyStyle","ErrorEvent","_super","__extends","error","_this","call","ERROR","MapboxVectorLayer","options","declutter","source","state","format","background","className","opacity","visible","zIndex","minResolution","maxResolution","minZoom","maxZoom","renderOrder","renderBuffer","renderMode","map","updateWhileAnimating","updateWhileInteracting","preload","useInterimTilesOnError","properties","accessToken","url","styleUrl","layers","then","setState","catch","dispatchEvent","getSource","getBackground","undefined"],"sources":["../src/layer/MapboxVector.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
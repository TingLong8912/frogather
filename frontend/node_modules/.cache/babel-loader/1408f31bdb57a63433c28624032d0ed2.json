{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { abstract } from '../util.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { linearFindNearest } from '../array.js';\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */function (_super) {\n  __extends(ImageSourceEvent, _super);\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  function ImageSourceEvent(type, image) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    _this.image = image;\n    return _this;\n  }\n  return ImageSourceEvent;\n}(Event);\nexport { ImageSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */function (_super) {\n  __extends(ImageSource, _super);\n  /**\n   * @param {Options} options Single image source options.\n   */\n  function ImageSource(options) {\n    var _this = this;\n    var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n    _this = _super.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate: interpolate\n    }) || this;\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.on;\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.once;\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    _this.un;\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    _this.resolutions_ = options.resolutions !== undefined ? options.resolutions : null;\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    _this.reprojectedImage_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.reprojectedRevision_ = 0;\n    return _this;\n  }\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  ImageSource.prototype.getResolutions = function () {\n    return this.resolutions_;\n  };\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION || !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() && equivalent(this.reprojectedImage_.getProjection(), projection) && this.reprojectedImage_.getResolution() == resolution && equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n      this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n        return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n      }.bind(this), this.getInterpolate());\n      this.reprojectedRevision_ = this.getRevision();\n      return this.reprojectedImage_;\n    }\n  };\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n    return abstract();\n  };\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function (event) {\n    var image = /** @type {import(\"../Image.js\").default} */event.target;\n    var type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  };\n  return ImageSource;\n}(Source);\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */image.getImage().src = src;\n}\nexport default ImageSource;","map":{"version":3,"names":["Event","ImageState","ReprojImage","Source","ENABLE_RASTER_REPROJECTION","abstract","equals","equivalent","linearFindNearest","ImageSourceEventType","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","ImageSourceEvent","_super","__extends","type","image","_this","call","ImageSource","options","interpolate","imageSmoothing","undefined","attributions","projection","state","on","once","un","resolutions_","resolutions","reprojectedImage_","reprojectedRevision_","prototype","getResolutions","findNearestResolution","resolution","idx","getImage","extent","pixelRatio","sourceProjection","getProjection","getImageInternal","getRevision","getResolution","getExtent","dispose","bind","getInterpolate","handleImageChange","event","target","getState","LOADING","loading","LOADED","ERROR","hasListener","dispatchEvent","defaultImageLoadFunction","src"],"sources":["../src/source/Image.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
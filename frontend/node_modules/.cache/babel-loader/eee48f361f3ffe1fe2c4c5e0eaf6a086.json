{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform } from '../../transform.js';\nimport { containsCoordinate } from '../../extent.js';\n/**\n * @enum {string}\n */\nexport var WebGLWorkerMessageType = {\n  GENERATE_BUFFERS: 'GENERATE_BUFFERS'\n};\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nvar WebGLLayerRenderer = /** @class */function (_super) {\n  __extends(WebGLLayerRenderer, _super);\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [opt_options] Options.\n   */\n  function WebGLLayerRenderer(layer, opt_options) {\n    var _this = _super.call(this, layer) || this;\n    var options = opt_options || {};\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.inversePixelTransform_ = createTransform();\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    _this.pixelContext_ = null;\n    /**\n     * @private\n     */\n    _this.postProcesses_ = options.postProcesses;\n    /**\n     * @private\n     */\n    _this.uniforms_ = options.uniforms;\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    _this.helper;\n    layer.addChangeListener(LayerProperty.MAP, _this.removeHelper.bind(_this));\n    _this.dispatchPreComposeEvent = _this.dispatchPreComposeEvent.bind(_this);\n    _this.dispatchPostComposeEvent = _this.dispatchPostComposeEvent.bind(_this);\n    return _this;\n  }\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.dispatchPreComposeEvent = function (context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      var event_1 = new RenderEvent(RenderEventType.PRECOMPOSE, undefined, frameState, context);\n      layer.dispatchEvent(event_1);\n    }\n  };\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.dispatchPostComposeEvent = function (context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      var event_2 = new RenderEvent(RenderEventType.POSTCOMPOSE, undefined, frameState, context);\n      layer.dispatchEvent(event_2);\n    }\n  };\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  WebGLLayerRenderer.prototype.reset = function (options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  };\n  /**\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.removeHelper = function () {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  };\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  WebGLLayerRenderer.prototype.prepareFrame = function (frameState) {\n    if (this.getLayer().getRenderSource()) {\n      var incrementGroup = true;\n      var groupNumber = -1;\n      var className = void 0;\n      for (var i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        var layer = frameState.layerStatesArray[i].layer;\n        var renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        var layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n      var canvasCacheKey = 'map/' + frameState.mapId + '/group/' + groupNumber;\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey\n        });\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n        this.afterHelperCreated();\n      }\n    }\n    return this.prepareFrameInternal(frameState);\n  };\n  /**\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.afterHelperCreated = function () {};\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.prepareFrameInternal = function (frameState) {\n    return true;\n  };\n  /**\n   * Clean up.\n   */\n  WebGLLayerRenderer.prototype.disposeInternal = function () {\n    this.removeHelper();\n    _super.prototype.disposeInternal.call(this);\n  };\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(this.inversePixelTransform_, 0, 0, frameState.pixelRatio, -frameState.pixelRatio, 0, 0, -frameState.size[1]);\n      var event_3 = new RenderEvent(type, this.inversePixelTransform_, frameState, context);\n      layer.dispatchEvent(event_3);\n    }\n  };\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.preRender = function (context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  };\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.postRender = function (context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  };\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  WebGLLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n    var renderPixel = applyTransform([frameState.pixelRatio, 0, 0, frameState.pixelRatio, 0, 0], pixel.slice());\n    var gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n    var layer = this.getLayer();\n    var layerExtent = layer.getExtent();\n    if (layerExtent) {\n      var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n    var attributes = gl.getContextAttributes();\n    if (!attributes || !attributes.preserveDrawingBuffer) {\n      // we assume there is data at the given pixel (although there might not be)\n      return new Uint8Array();\n    }\n    var x = Math.round(renderPixel[0]);\n    var y = Math.round(renderPixel[1]);\n    var pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      var pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    var data;\n    try {\n      pixelContext.drawImage(gl.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return data;\n    }\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  };\n  return WebGLLayerRenderer;\n}(LayerRenderer);\nvar tmpArray_ = [];\nvar bufferPositions_ = {\n  vertexPosition: 0,\n  indexPosition: 0\n};\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(instructions, elementIndex, vertexBuffer, indexBuffer, customAttributesCount, bufferPositions) {\n  // This is for x, y and index\n  var baseVertexAttrsCount = 3;\n  var baseInstructionsCount = 2;\n  var stride = baseVertexAttrsCount + customAttributesCount;\n  var x = instructions[elementIndex + 0];\n  var y = instructions[elementIndex + 1];\n  // read custom numerical attributes on the feature\n  var customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (var i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n  var vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  var iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  var baseIndex = vPos / stride;\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length && vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length && vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length && vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length && vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n  return bufferPositions_;\n}\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  var canvas = document.createElement('canvas');\n  var image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n  var array = opt_array || [];\n  var radix = 256;\n  var divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = Math.floor(id / radix / radix) % radix / divide;\n  array[2] = Math.floor(id / radix) % radix / divide;\n  array[3] = id % radix / divide;\n  return array;\n}\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  var id = 0;\n  var radix = 256;\n  var mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\nexport default WebGLLayerRenderer;","map":{"version":3,"names":["LayerProperty","LayerRenderer","RenderEvent","RenderEventType","WebGLHelper","apply","applyTransform","compose","composeTransform","create","createTransform","containsCoordinate","WebGLWorkerMessageType","GENERATE_BUFFERS","WebGLLayerRenderer","_super","__extends","layer","opt_options","_this","call","options","inversePixelTransform_","pixelContext_","postProcesses_","postProcesses","uniforms_","uniforms","helper","addChangeListener","MAP","removeHelper","bind","dispatchPreComposeEvent","dispatchPostComposeEvent","prototype","context","frameState","getLayer","hasListener","PRECOMPOSE","event_1","undefined","dispatchEvent","POSTCOMPOSE","event_2","reset","setUniforms","dispose","prepareFrame","getRenderSource","incrementGroup","groupNumber","className","i","ii","layerStatesArray","length","renderer","getRenderer","layerClassName","getClassName","canvasCacheKey","mapId","canvasCacheKeyMatches","getCanvas","afterHelperCreated","prepareFrameInternal","disposeInternal","dispatchRenderEvent_","type","pixelRatio","size","event_3","preRender","PRERENDER","postRender","POSTRENDER","getDataAtPixel","pixel","hitTolerance","renderPixel","slice","gl","getGL","layerExtent","getExtent","renderCoordinate","pixelToCoordinateTransform","attributes","getContextAttributes","preserveDrawingBuffer","Uint8Array","x","Math","round","y","pixelContext","pixelCanvas","document","createElement","width","height","getContext","clearRect","data","drawImage","canvas","getImageData","err","tmpArray_","bufferPositions_","vertexPosition","indexPosition","writePointVertex","buffer","pos","index","writePointFeatureToBuffers","instructions","elementIndex","vertexBuffer","indexBuffer","customAttributesCount","bufferPositions","baseVertexAttrsCount","baseInstructionsCount","stride","customAttrs","vPos","iPos","baseIndex","set","getBlankImageData","image","createImageData","colorEncodeId","id","opt_array","array","radix","divide","floor","colorDecodeId","color","mult"],"sources":["../../src/renderer/webgl/Layer.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
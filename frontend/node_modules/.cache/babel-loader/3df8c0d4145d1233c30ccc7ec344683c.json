{"ast":null,"code":"/**\n * @module ol/source/Cluster\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport { add as addCoordinate, scale as scaleCoordinate } from '../coordinate.js';\nimport { assert } from '../asserts.js';\nimport { buffer, createEmpty, createOrUpdateFromCoordinate, getCenter } from '../extent.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nvar Cluster = /** @class */function (_super) {\n  __extends(Cluster, _super);\n  /**\n   * @param {Options} options Cluster options.\n   */\n  function Cluster(options) {\n    var _this = _super.call(this, {\n      attributions: options.attributions,\n      wrapX: options.wrapX\n    }) || this;\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    _this.resolution = undefined;\n    /**\n     * @type {number}\n     * @protected\n     */\n    _this.distance = options.distance !== undefined ? options.distance : 20;\n    /**\n     * @type {number}\n     * @protected\n     */\n    _this.minDistance = options.minDistance || 0;\n    /**\n     * @type {number}\n     * @protected\n     */\n    _this.interpolationRatio = 0;\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    _this.features = [];\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    _this.geometryFunction = options.geometryFunction || function (feature) {\n      var geometry = /** @type {Point} */feature.getGeometry();\n      assert(geometry.getType() == 'Point', 10); // The default `geometryFunction` can only handle `Point` geometries\n      return geometry;\n    };\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    _this.createCustomCluster_ = options.createCluster;\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    _this.source = null;\n    /**\n     * @private\n     */\n    _this.boundRefresh_ = _this.refresh.bind(_this);\n    _this.updateDistance(_this.distance, _this.minDistance);\n    _this.setSource(options.source || null);\n    return _this;\n  }\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  Cluster.prototype.clear = function (opt_fast) {\n    this.features.length = 0;\n    _super.prototype.clear.call(this, opt_fast);\n  };\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  Cluster.prototype.getDistance = function () {\n    return this.distance;\n  };\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  Cluster.prototype.getSource = function () {\n    return this.source;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  };\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  Cluster.prototype.setDistance = function (distance) {\n    this.updateDistance(distance, this.minDistance);\n  };\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  Cluster.prototype.setMinDistance = function (minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  };\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  Cluster.prototype.getMinDistance = function () {\n    return this.minDistance;\n  };\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  Cluster.prototype.setSource = function (source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  };\n  /**\n   * Handle the source changing.\n   */\n  Cluster.prototype.refresh = function () {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  };\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  Cluster.prototype.updateDistance = function (distance, minDistance) {\n    var ratio = distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    var changed = distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  };\n  /**\n   * @protected\n   */\n  Cluster.prototype.cluster = function () {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    var extent = createEmpty();\n    var mapDistance = this.distance * this.resolution;\n    var features = this.source.getFeatures();\n    /** @type {Object<string, true>} */\n    var clustered = {};\n    for (var i = 0, ii = features.length; i < ii; i++) {\n      var feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        var geometry = this.geometryFunction(feature);\n        if (geometry) {\n          var coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n          var neighbors = this.source.getFeaturesInExtent(extent).filter(function (neighbor) {\n            var uid = getUid(neighbor);\n            if (uid in clustered) {\n              return false;\n            }\n            clustered[uid] = true;\n            return true;\n          });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  };\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  Cluster.prototype.createCluster = function (features, extent) {\n    var centroid = [0, 0];\n    for (var i = features.length - 1; i >= 0; --i) {\n      var geometry_1 = this.geometryFunction(features[i]);\n      if (geometry_1) {\n        addCoordinate(centroid, geometry_1.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    var searchCenter = getCenter(extent);\n    var ratio = this.interpolationRatio;\n    var geometry = new Point([centroid[0] * (1 - ratio) + searchCenter[0] * ratio, centroid[1] * (1 - ratio) + searchCenter[1] * ratio]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    } else {\n      return new Feature({\n        geometry: geometry,\n        features: features\n      });\n    }\n  };\n  return Cluster;\n}(VectorSource);\nexport default Cluster;","map":{"version":3,"names":["EventType","Feature","Point","VectorSource","add","addCoordinate","scale","scaleCoordinate","assert","buffer","createEmpty","createOrUpdateFromCoordinate","getCenter","getUid","Cluster","_super","__extends","options","_this","call","attributions","wrapX","resolution","undefined","distance","minDistance","interpolationRatio","features","geometryFunction","feature","geometry","getGeometry","getType","createCustomCluster_","createCluster","source","boundRefresh_","refresh","bind","updateDistance","setSource","prototype","clear","opt_fast","length","getDistance","getSource","loadFeatures","extent","projection","setDistance","setMinDistance","getMinDistance","removeEventListener","CHANGE","addEventListener","cluster","addFeatures","ratio","Math","min","changed","mapDistance","getFeatures","clustered","i","ii","coordinates","getCoordinates","neighbors","getFeaturesInExtent","filter","neighbor","uid","push","centroid","geometry_1","splice","searchCenter"],"sources":["../src/source/Cluster.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
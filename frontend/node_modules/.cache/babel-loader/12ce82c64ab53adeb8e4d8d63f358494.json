{"ast":null,"code":"/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getHeight, getWidth, intersects } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    const /** @type {import(\"../Image.js\").LoadFunction} */imageLoadFunction = options.imageLoadFunction !== undefined ? options.imageLoadFunction : defaultImageLoadFunction;\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction, createCanvasContext2D(1, 1));\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n    this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\nexport default Static;","map":{"version":3,"names":["EventType","ImageSource","defaultImageLoadFunction","ImageState","ImageWrapper","createCanvasContext2D","getHeight","getWidth","intersects","get","getProjection","Static","constructor","options","crossOrigin","undefined","imageLoadFunction","attributions","interpolate","projection","url_","url","imageExtent_","imageExtent","image_","imageSize_","imageSize","addEventListener","CHANGE","handleImageChange","bind","getImageExtent","getImageInternal","extent","resolution","pixelRatio","getExtent","getUrl","evt","getState","LOADED","image","getImage","imageWidth","imageHeight","width","height","extentWidth","extentHeight","xResolution","yResolution","targetWidth","targetHeight","Math","round","context","getInterpolate","imageSmoothingEnabled","canvas","drawImage","setImage"],"sources":["/Users/yantinglong/Documents/project/frogather/node_modules/ol/source/ImageStatic.js"],"sourcesContent":["/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction,\n      createCanvasContext2D(1, 1)\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,IAAGC,wBAAwB,QAAO,YAAY;AAChE,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,YAAY,MAAM,aAAa;AACtC,SAAQC,qBAAqB,QAAO,WAAW;AAC/C,SAAQC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAO,cAAc;AAC5D,SAAQC,GAAG,IAAIC,aAAa,QAAO,YAAY;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,SAASV,WAAW,CAAC;EAC/B;AACF;AACA;EACEW,WAAWA,CAACC,OAAO,EAAE;IACnB,MAAMC,WAAW,GACfD,OAAO,CAACC,WAAW,KAAKC,SAAS,GAAGF,OAAO,CAACC,WAAW,GAAG,IAAI;IAEhE,MAAM,iDAAkDE,iBAAiB,GACrEH,OAAO,CAACG,iBAAiB,KAAKD,SAAS,GACnCF,OAAO,CAACG,iBAAiB,GACzBd,wBAAwB;IAEhC,KAAK,CAAC;MACJe,YAAY,EAAEJ,OAAO,CAACI,YAAY;MAClCC,WAAW,EAAEL,OAAO,CAACK,WAAW;MAChCC,UAAU,EAAET,aAAa,CAACG,OAAO,CAACM,UAAU;IAC9C,CAAC,CAAC;;IAEF;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGP,OAAO,CAACQ,GAAG;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAGT,OAAO,CAACU,WAAW;;IAEvC;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,IAAIpB,YAAY,CAC5B,IAAI,CAACkB,YAAY,EACjBP,SAAS,EACT,CAAC,EACD,IAAI,CAACK,IAAI,EACTN,WAAW,EACXE,iBAAiB,EACjBX,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAC5B,CAAC;;IAED;AACJ;AACA;AACA;IACI,IAAI,CAACoB,UAAU,GAAGZ,OAAO,CAACa,SAAS,GAAGb,OAAO,CAACa,SAAS,GAAG,IAAI;IAE9D,IAAI,CAACF,MAAM,CAACG,gBAAgB,CAC1B3B,SAAS,CAAC4B,MAAM,EAChB,IAAI,CAACC,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAClC,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI,CAACT,YAAY;EAC1B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEU,gBAAgBA,CAACC,MAAM,EAAEC,UAAU,EAAEC,UAAU,EAAEhB,UAAU,EAAE;IAC3D,IAAIX,UAAU,CAACyB,MAAM,EAAE,IAAI,CAACT,MAAM,CAACY,SAAS,CAAC,CAAC,CAAC,EAAE;MAC/C,OAAO,IAAI,CAACZ,MAAM;IACpB;IACA,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;EACEa,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACjB,IAAI;EAClB;;EAEA;AACF;AACA;EACES,iBAAiBA,CAACS,GAAG,EAAE;IACrB,IAAI,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,IAAIpC,UAAU,CAACqC,MAAM,EAAE;MAC/C,MAAMjB,WAAW,GAAG,IAAI,CAACC,MAAM,CAACY,SAAS,CAAC,CAAC;MAC3C,MAAMK,KAAK,GAAG,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC;MACpC,IAAIC,UAAU,EAAEC,WAAW;MAC3B,IAAI,IAAI,CAACnB,UAAU,EAAE;QACnBkB,UAAU,GAAG,IAAI,CAAClB,UAAU,CAAC,CAAC,CAAC;QAC/BmB,WAAW,GAAG,IAAI,CAACnB,UAAU,CAAC,CAAC,CAAC;MAClC,CAAC,MAAM;QACLkB,UAAU,GAAGF,KAAK,CAACI,KAAK;QACxBD,WAAW,GAAGH,KAAK,CAACK,MAAM;MAC5B;MACA,MAAMC,WAAW,GAAGxC,QAAQ,CAACgB,WAAW,CAAC;MACzC,MAAMyB,YAAY,GAAG1C,SAAS,CAACiB,WAAW,CAAC;MAC3C,MAAM0B,WAAW,GAAGF,WAAW,GAAGJ,UAAU;MAC5C,MAAMO,WAAW,GAAGF,YAAY,GAAGJ,WAAW;MAC9C,IAAIO,WAAW,GAAGR,UAAU;MAC5B,IAAIS,YAAY,GAAGR,WAAW;MAC9B,IAAIK,WAAW,GAAGC,WAAW,EAAE;QAC7BC,WAAW,GAAGE,IAAI,CAACC,KAAK,CAACP,WAAW,GAAGG,WAAW,CAAC;MACrD,CAAC,MAAM;QACLE,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACN,YAAY,GAAGC,WAAW,CAAC;MACvD;MACA,IAAIE,WAAW,KAAKR,UAAU,IAAIS,YAAY,KAAKR,WAAW,EAAE;QAC9D,MAAMW,OAAO,GAAGlD,qBAAqB,CAAC8C,WAAW,EAAEC,YAAY,CAAC;QAChE,IAAI,CAAC,IAAI,CAACI,cAAc,CAAC,CAAC,EAAE;UAC1BD,OAAO,CAACE,qBAAqB,GAAG,KAAK;QACvC;QACA,MAAMC,MAAM,GAAGH,OAAO,CAACG,MAAM;QAC7BH,OAAO,CAACI,SAAS,CACflB,KAAK,EACL,CAAC,EACD,CAAC,EACDE,UAAU,EACVC,WAAW,EACX,CAAC,EACD,CAAC,EACDc,MAAM,CAACb,KAAK,EACZa,MAAM,CAACZ,MACT,CAAC;QACD,IAAI,CAACtB,MAAM,CAACoC,QAAQ,CAACF,MAAM,CAAC;MAC9B;IACF;IACA,KAAK,CAAC7B,iBAAiB,CAACS,GAAG,CAAC;EAC9B;AACF;AAEA,eAAe3B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}
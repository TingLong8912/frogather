{"ast":null,"code":"/**\n * @module ol/webgl/TileTexture\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport DataTile from '../DataTile.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport { ARRAY_BUFFER, STATIC_DRAW } from '../webgl.js';\nimport { toSize } from '../size.js';\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n  var resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").Data} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(helper, texture, data, size, bandCount, interpolate) {\n  var gl = helper.getGL();\n  var textureType;\n  var canInterpolate;\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    var extension = helper.getExtension('OES_texture_float_linear');\n    canInterpolate = extension !== null;\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n    canInterpolate = true;\n  }\n  bindAndConfigure(gl, texture, interpolate && canInterpolate);\n  var bytesPerRow = data.byteLength / size[1];\n  var unpackAlignment = 1;\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n  var format;\n  switch (bandCount) {\n    case 1:\n      {\n        format = gl.LUMINANCE;\n        break;\n      }\n    case 2:\n      {\n        format = gl.LUMINANCE_ALPHA;\n        break;\n      }\n    case 3:\n      {\n        format = gl.RGB;\n        break;\n      }\n    case 4:\n      {\n        format = gl.RGBA;\n        break;\n      }\n    default:\n      {\n        throw new Error(\"Unsupported number of bands: \".concat(bandCount));\n      }\n  }\n  var oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, size[0], size[1], 0, format, textureType, data);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar pixelContext = null;\nfunction createPixelContext() {\n  var canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n/**\n * @typedef {Object} Options\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\nvar TileTexture = /** @class */function (_super) {\n  __extends(TileTexture, _super);\n  /**\n   * @param {Options} options The tile texture options.\n   */\n  function TileTexture(options) {\n    var _this = _super.call(this) || this;\n    /**\n     * @type {TileType}\n     */\n    _this.tile;\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n    _this.textures = [];\n    _this.handleTileChange_ = _this.handleTileChange_.bind(_this);\n    /**\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    _this.renderSize_ = toSize(options.grid.getTileSize(options.tile.tileCoord[0]));\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.gutter_ = options.gutter || 0;\n    /**\n     * @type {number}\n     */\n    _this.bandCount = NaN;\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @private\n     */\n    _this.helper_ = options.helper;\n    var coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([0, 1, 1, 1, 1, 0, 0, 0]);\n    _this.helper_.flushBufferData(coords);\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n    _this.coords = coords;\n    _this.setTile(options.tile);\n    return _this;\n  }\n  /**\n   * @param {TileType} tile Tile.\n   */\n  TileTexture.prototype.setTile = function (tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n      this.tile = tile;\n      this.textures.length = 0;\n      this.loaded = tile.getState() === TileState.LOADED;\n      if (this.loaded) {\n        this.uploadTile_();\n      } else {\n        if (tile instanceof ImageTile) {\n          var image = tile.getImage();\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  };\n  TileTexture.prototype.uploadTile_ = function () {\n    var helper = this.helper_;\n    var gl = helper.getGL();\n    var tile = this.tile;\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      var texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, tile.getImage(), tile.interpolate);\n      return;\n    }\n    var sourceTileSize = tile.getSize();\n    var pixelSize = [sourceTileSize[0] + 2 * this.gutter_, sourceTileSize[1] + 2 * this.gutter_];\n    var data = tile.getData();\n    var isFloat = data instanceof Float32Array;\n    var pixelCount = pixelSize[0] * pixelSize[1];\n    var DataType = isFloat ? Float32Array : Uint8Array;\n    var bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    var bytesPerRow = data.byteLength / pixelSize[1];\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    var textureCount = Math.ceil(this.bandCount / 4);\n    if (textureCount === 1) {\n      var texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(helper, texture, data, pixelSize, this.bandCount, tile.interpolate);\n      return;\n    }\n    var textureDataArrays = new Array(textureCount);\n    for (var textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      var texture = gl.createTexture();\n      this.textures.push(texture);\n      var bandCount = textureIndex < textureCount - 1 ? 4 : this.bandCount % 4;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n    var dataIndex = 0;\n    var rowOffset = 0;\n    var colCount = pixelSize[0] * this.bandCount;\n    for (var rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (var colIndex = 0; colIndex < colCount; ++colIndex) {\n        var dataValue = data[rowOffset + colIndex];\n        var pixelIndex = Math.floor(dataIndex / this.bandCount);\n        var bandIndex = colIndex % this.bandCount;\n        var textureIndex = Math.floor(bandIndex / 4);\n        var textureData = textureDataArrays[textureIndex];\n        var bandCount = textureData.length / pixelCount;\n        var textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n        ++dataIndex;\n      }\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n    for (var textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      var texture = this.textures[textureIndex];\n      var textureData = textureDataArrays[textureIndex];\n      var bandCount = textureData.length / pixelCount;\n      uploadDataTexture(helper, texture, textureData, pixelSize, bandCount, tile.interpolate);\n    }\n  };\n  TileTexture.prototype.handleTileChange_ = function () {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile_();\n      this.dispatchEvent(EventType.CHANGE);\n    }\n  };\n  TileTexture.prototype.disposeInternal = function () {\n    var gl = this.helper_.getGL();\n    this.helper_.deleteBuffer(this.coords);\n    for (var i = 0; i < this.textures.length; ++i) {\n      gl.deleteTexture(this.textures[i]);\n    }\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  };\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").Data|null} The data.\n   */\n  TileTexture.prototype.getPixelData = function (renderCol, renderRow) {\n    if (!this.loaded) {\n      return null;\n    }\n    var renderWidth = this.renderSize_[0];\n    var renderHeight = this.renderSize_[1];\n    var gutter = this.gutter_;\n    if (this.tile instanceof DataTile) {\n      var sourceSize = this.tile.getSize();\n      var sourceWidthWithoutGutter_1 = sourceSize[0];\n      var sourceHeightWithoutGutter_1 = sourceSize[1];\n      var sourceWidth_1 = sourceWidthWithoutGutter_1 + 2 * gutter;\n      var sourceHeight_1 = sourceHeightWithoutGutter_1 + 2 * gutter;\n      var sourceCol_1 = gutter + Math.floor(sourceWidthWithoutGutter_1 * (renderCol / renderWidth));\n      var sourceRow_1 = gutter + Math.floor(sourceHeightWithoutGutter_1 * (renderRow / renderHeight));\n      var data_1 = this.tile.getData();\n      if (data_1 instanceof DataView) {\n        var bytesPerPixel = data_1.byteLength / (sourceWidth_1 * sourceHeight_1);\n        var offset_1 = bytesPerPixel * (sourceRow_1 * sourceWidth_1 + sourceCol_1);\n        var buffer = data_1.buffer.slice(offset_1, offset_1 + bytesPerPixel);\n        return new DataView(buffer);\n      }\n      var offset = this.bandCount * (sourceRow_1 * sourceWidth_1 + sourceCol_1);\n      return data_1.slice(offset, offset + this.bandCount);\n    }\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    var image = this.tile.getImage();\n    var sourceWidth = image.width;\n    var sourceHeight = image.height;\n    var sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n    var sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n    var sourceCol = gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n    var sourceRow = gutter + Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n    var data;\n    try {\n      pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  };\n  return TileTexture;\n}(EventTarget);\nexport default TileTexture;","map":{"version":3,"names":["DataTile","EventTarget","EventType","ImageTile","ReprojTile","TileState","WebGLArrayBuffer","ARRAY_BUFFER","STATIC_DRAW","toSize","bindAndConfigure","gl","texture","interpolate","resampleFilter","LINEAR","NEAREST","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","uploadImageTexture","image","texImage2D","RGBA","UNSIGNED_BYTE","uploadDataTexture","helper","data","size","bandCount","getGL","textureType","canInterpolate","Float32Array","FLOAT","getExtension","extension","bytesPerRow","byteLength","unpackAlignment","format","LUMINANCE","LUMINANCE_ALPHA","RGB","Error","concat","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","pixelContext","createPixelContext","canvas","document","createElement","width","height","getContext","TileTexture","_super","__extends","options","_this","call","tile","textures","handleTileChange_","bind","renderSize_","grid","getTileSize","tileCoord","gutter_","gutter","NaN","helper_","coords","fromArray","flushBufferData","setTile","prototype","removeEventListener","CHANGE","length","loaded","getState","LOADED","uploadTile_","getImage","Image","crossOrigin","addEventListener","createTexture","push","sourceTileSize","getSize","pixelSize","getData","isFloat","pixelCount","DataType","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","Math","floor","textureCount","ceil","textureDataArrays","Array","textureIndex","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataValue","pixelIndex","bandIndex","textureData","textureBandIndex","dispatchEvent","disposeInternal","deleteBuffer","i","deleteTexture","getPixelData","renderCol","renderRow","renderWidth","renderHeight","sourceSize","sourceWidthWithoutGutter_1","sourceHeightWithoutGutter_1","sourceWidth_1","sourceHeight_1","sourceCol_1","sourceRow_1","data_1","DataView","bytesPerPixel","offset_1","buffer","slice","offset","clearRect","sourceWidth","sourceHeight","sourceWidthWithoutGutter","sourceHeightWithoutGutter","sourceCol","sourceRow","drawImage","getImageData","err"],"sources":["../src/webgl/TileTexture.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * @module ol/source/BingMaps\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport TileImage from './TileImage.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport { jsonp as requestJSONP } from '../net.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << z - 1;\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' + 'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' + 'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */function (_super) {\n  __extends(BingMaps, _super);\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  function BingMaps(options) {\n    var _this = this;\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n    var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n    _this = _super.call(this, {\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection\n    }) || this;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.hidpi_ = hidpi;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.apiKey_ = options.key;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.imagerySet_ = options.imagerySet;\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' + _this.imagerySet_ + '?uriScheme=https&include=ImageryProviders&key=' + _this.apiKey_ + '&c=' + _this.culture_;\n    requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n    return _this;\n  }\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  BingMaps.prototype.getApiKey = function () {\n    return this.apiKey_;\n  };\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  BingMaps.prototype.getImagerySet = function () {\n    return this.imagerySet_;\n  };\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n    if (response.statusCode != 200 || response.statusDescription != 'OK' || response.authenticationResultCode != 'ValidCredentials' || response.resourceSets.length != 1 || response.resourceSets[0].resources.length != 1) {\n      this.setState('error');\n      return;\n    }\n    var resource = response.resourceSets[0].resources[0];\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n    var sourceProjection = this.getProjection();\n    var extent = extentFromProjection(sourceProjection);\n    var scale = this.hidpi_ ? 2 : 1;\n    var tileSize = resource.imageWidth == resource.imageHeight ? resource.imageWidth / scale : [resource.imageWidth / scale, resource.imageHeight / scale];\n    var tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize\n    });\n    this.tileGrid = tileGrid;\n    var culture = this.culture_;\n    var hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n      /** @type {import('../tilecoord.js').TileCoord} */\n      var quadKeyTileCoord = [0, 0, 0];\n      var imageUrl = resource.imageUrl.replace('{subdomain}', subdomain).replace('{culture}', culture);\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n            var url = imageUrl;\n            if (hidpi) {\n              url += '&dpi=d1&device=mobile';\n            }\n            return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n          }\n        }\n      );\n    }));\n    if (resource.imageryProviders) {\n      var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n      this.setAttributions(function (frameState) {\n        var attributions = [];\n        var viewState = frameState.viewState;\n        var tileGrid = this.getTileGrid();\n        var z = tileGrid.getZForResolution(viewState.resolution, this.zDirection);\n        var tileCoord = tileGrid.getTileCoordForCoordAndZ(viewState.center, z);\n        var zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          var intersecting = false;\n          var coverageAreas = imageryProvider.coverageAreas;\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            var coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              var bbox = coverageArea.bbox;\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              var extent_1 = applyTransform(epsg4326Extent, transform_1);\n              if (intersects(extent_1, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      }.bind(this));\n    }\n    this.setState('ready');\n  };\n  return BingMaps;\n}(TileImage);\nexport default BingMaps;","map":{"version":3,"names":["TileImage","applyTransform","intersects","createFromTileUrlFunctions","createOrUpdate","createXYZ","extentFromProjection","get","getProjection","getTransformFromProjections","jsonp","requestJSONP","quadKey","tileCoord","z","digits","Array","mask","i","charCode","String","fromCharCode","join","TOS_ATTRIBUTION","BingMaps","_super","__extends","options","_this","hidpi","undefined","interpolate","imageSmoothing","call","cacheSize","crossOrigin","opaque","projection","reprojectionErrorThreshold","state","tileLoadFunction","tilePixelRatio","wrapX","transition","zDirection","hidpi_","culture_","culture","maxZoom_","maxZoom","apiKey_","key","imagerySet_","imagerySet","url","handleImageryMetadataResponse","bind","prototype","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","length","resources","setState","resource","zoomMax","sourceProjection","extent","scale","tileSize","imageWidth","imageHeight","tileGrid","minZoom","zoomMin","tileUrlFunction","imageUrlSubdomains","map","subdomain","quadKeyTileCoord","imageUrl","replace","pixelRatio","imageryProviders","transform_1","setAttributions","frameState","attributions","viewState","getTileGrid","getZForResolution","resolution","getTileCoordForCoordAndZ","center","zoom","imageryProvider","intersecting","coverageAreas","ii","coverageArea","bbox","epsg4326Extent","extent_1","push","attribution"],"sources":["../src/source/BingMaps.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * @module ol/source\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { getIntersection } from './extent.js';\nexport { default as BingMaps } from './source/BingMaps.js';\nexport { default as CartoDB } from './source/CartoDB.js';\nexport { default as Cluster } from './source/Cluster.js';\nexport { default as DataTile } from './source/DataTile.js';\nexport { default as GeoTIFF } from './source/GeoTIFF.js';\nexport { default as IIIF } from './source/IIIF.js';\nexport { default as Image } from './source/Image.js';\nexport { default as ImageArcGISRest } from './source/ImageArcGISRest.js';\nexport { default as ImageCanvas } from './source/ImageCanvas.js';\nexport { default as ImageMapGuide } from './source/ImageMapGuide.js';\nexport { default as ImageStatic } from './source/ImageStatic.js';\nexport { default as ImageWMS } from './source/ImageWMS.js';\nexport { default as OSM } from './source/OSM.js';\nexport { default as Raster } from './source/Raster.js';\nexport { default as Source } from './source/Source.js';\nexport { default as Stamen } from './source/Stamen.js';\nexport { default as Tile } from './source/Tile.js';\nexport { default as TileArcGISRest } from './source/TileArcGISRest.js';\nexport { default as TileDebug } from './source/TileDebug.js';\nexport { default as TileImage } from './source/TileImage.js';\nexport { default as TileJSON } from './source/TileJSON.js';\nexport { default as TileWMS } from './source/TileWMS.js';\nexport { default as UrlTile } from './source/UrlTile.js';\nexport { default as UTFGrid } from './source/UTFGrid.js';\nexport { default as Vector } from './source/Vector.js';\nexport { default as VectorTile } from './source/VectorTile.js';\nexport { default as WMTS } from './source/WMTS.js';\nexport { default as XYZ } from './source/XYZ.js';\nexport { default as Zoomify } from './source/Zoomify.js';\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  var sourceCache = new LRUCache(32);\n  var tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    var z = tileGrid.getZForResolution(resolution);\n    var wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, function (tileCoord) {\n      var key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        var source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}","map":{"version":3,"names":["LRUCache","getIntersection","default","BingMaps","CartoDB","Cluster","DataTile","GeoTIFF","IIIF","Image","ImageArcGISRest","ImageCanvas","ImageMapGuide","ImageStatic","ImageWMS","OSM","Raster","Source","Stamen","Tile","TileArcGISRest","TileDebug","TileImage","TileJSON","TileWMS","UrlTile","UTFGrid","Vector","VectorTile","WMTS","XYZ","Zoomify","sourcesFromTileGrid","tileGrid","factory","sourceCache","tileGridExtent","getExtent","extent","resolution","expireCache","z","getZForResolution","wantedSources","forEachTileCoord","tileCoord","key","toString","containsKey","source","set","push","get"],"sources":["src/source.js"],"sourcesContent":[null],"mappings":"AAAA;;;AAIA,OAAOA,QAAQ,MAAM,uBAAuB;AAC5C,SAAQC,eAAe,QAAO,aAAa;AAE3C,SAAQC,OAAO,IAAIC,QAAQ,QAAO,sBAAsB;AACxD,SAAQD,OAAO,IAAIE,OAAO,QAAO,qBAAqB;AACtD,SAAQF,OAAO,IAAIG,OAAO,QAAO,qBAAqB;AACtD,SAAQH,OAAO,IAAII,QAAQ,QAAO,sBAAsB;AACxD,SAAQJ,OAAO,IAAIK,OAAO,QAAO,qBAAqB;AACtD,SAAQL,OAAO,IAAIM,IAAI,QAAO,kBAAkB;AAChD,SAAQN,OAAO,IAAIO,KAAK,QAAO,mBAAmB;AAClD,SAAQP,OAAO,IAAIQ,eAAe,QAAO,6BAA6B;AACtE,SAAQR,OAAO,IAAIS,WAAW,QAAO,yBAAyB;AAC9D,SAAQT,OAAO,IAAIU,aAAa,QAAO,2BAA2B;AAClE,SAAQV,OAAO,IAAIW,WAAW,QAAO,yBAAyB;AAC9D,SAAQX,OAAO,IAAIY,QAAQ,QAAO,sBAAsB;AACxD,SAAQZ,OAAO,IAAIa,GAAG,QAAO,iBAAiB;AAC9C,SAAQb,OAAO,IAAIc,MAAM,QAAO,oBAAoB;AACpD,SAAQd,OAAO,IAAIe,MAAM,QAAO,oBAAoB;AACpD,SAAQf,OAAO,IAAIgB,MAAM,QAAO,oBAAoB;AACpD,SAAQhB,OAAO,IAAIiB,IAAI,QAAO,kBAAkB;AAChD,SAAQjB,OAAO,IAAIkB,cAAc,QAAO,4BAA4B;AACpE,SAAQlB,OAAO,IAAImB,SAAS,QAAO,uBAAuB;AAC1D,SAAQnB,OAAO,IAAIoB,SAAS,QAAO,uBAAuB;AAC1D,SAAQpB,OAAO,IAAIqB,QAAQ,QAAO,sBAAsB;AACxD,SAAQrB,OAAO,IAAIsB,OAAO,QAAO,qBAAqB;AACtD,SAAQtB,OAAO,IAAIuB,OAAO,QAAO,qBAAqB;AACtD,SAAQvB,OAAO,IAAIwB,OAAO,QAAO,qBAAqB;AACtD,SAAQxB,OAAO,IAAIyB,MAAM,QAAO,oBAAoB;AACpD,SAAQzB,OAAO,IAAI0B,UAAU,QAAO,wBAAwB;AAC5D,SAAQ1B,OAAO,IAAI2B,IAAI,QAAO,kBAAkB;AAChD,SAAQ3B,OAAO,IAAI4B,GAAG,QAAO,iBAAiB;AAC9C,SAAQ5B,OAAO,IAAI6B,OAAO,QAAO,qBAAqB;AAEtD;;;;;;;;;;;;AAYA,OAAM,SAAUC,mBAAmBA,CAACC,QAAQ,EAAEC,OAAO;EACnD,IAAMC,WAAW,GAAG,IAAInC,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAMoC,cAAc,GAAGH,QAAQ,CAACI,SAAS,EAAE;EAC3C,OAAO,UAAUC,MAAM,EAAEC,UAAU;IACjCJ,WAAW,CAACK,WAAW,EAAE;IACzB,IAAIJ,cAAc,EAAE;MAClBE,MAAM,GAAGrC,eAAe,CAACmC,cAAc,EAAEE,MAAM,CAAC;;IAElD,IAAMG,CAAC,GAAGR,QAAQ,CAACS,iBAAiB,CAACH,UAAU,CAAC;IAChD,IAAMI,aAAa,GAAG,EAAE;IACxBV,QAAQ,CAACW,gBAAgB,CAACN,MAAM,EAAEG,CAAC,EAAE,UAACI,SAAS;MAC7C,IAAMC,GAAG,GAAGD,SAAS,CAACE,QAAQ,EAAE;MAChC,IAAI,CAACZ,WAAW,CAACa,WAAW,CAACF,GAAG,CAAC,EAAE;QACjC,IAAMG,MAAM,GAAGf,OAAO,CAACW,SAAS,CAAC;QACjCV,WAAW,CAACe,GAAG,CAACJ,GAAG,EAAEG,MAAM,CAAC;;MAE9BN,aAAa,CAACQ,IAAI,CAAChB,WAAW,CAACiB,GAAG,CAACN,GAAG,CAAC,CAAC;IAC1C,CAAC,CAAC;IACF,OAAOH,aAAa;EACtB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}
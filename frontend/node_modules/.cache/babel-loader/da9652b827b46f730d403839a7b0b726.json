{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nvar ImageLayer = /** @class */function (_super) {\n  __extends(ImageLayer, _super);\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [opt_options] Layer options.\n   */\n  function ImageLayer(opt_options) {\n    return _super.call(this, opt_options) || this;\n  }\n  ImageLayer.prototype.createRenderer = function () {\n    return new CanvasImageLayerRenderer(this);\n  };\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  ImageLayer.prototype.getData = function (pixel) {\n    return _super.prototype.getData.call(this, pixel);\n  };\n  return ImageLayer;\n}(BaseImageLayer);\nexport default ImageLayer;","map":{"version":3,"names":["BaseImageLayer","CanvasImageLayerRenderer","ImageLayer","_super","__extends","opt_options","call","prototype","createRenderer","getData","pixel"],"sources":["../src/layer/Image.js"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;AAGA,OAAOA,cAAc,MAAM,gBAAgB;AAC3C,OAAOC,wBAAwB,MAAM,kCAAkC;AAEvE;;;;;;;;;;;;AAYA,IAAAC,UAAA,0BAAAC,MAAA;EAAyBC,SAAA,CAAAF,UAAA,EAAAC,MAAA;EACvB;;;EAGA,SAAAD,WAAYG,WAAW;WACrBF,MAAA,CAAAG,IAAA,OAAMD,WAAW,CAAC;EACpB;EAEAH,UAAA,CAAAK,SAAA,CAAAC,cAAc,GAAd;IACE,OAAO,IAAIP,wBAAwB,CAAC,IAAI,CAAC;EAC3C,CAAC;EAED;;;;;;;;;;;;;;;EAeAC,UAAA,CAAAK,SAAA,CAAAE,OAAO,GAAP,UAAQC,KAAK;IACX,OAAOP,MAAA,CAAAI,SAAA,CAAME,OAAO,CAAAH,IAAA,OAACI,KAAK,CAAC;EAC7B,CAAC;EACH,OAAAR,UAAC;AAAD,CAAC,CA9BwBF,cAAc;AAgCvC,eAAeE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}
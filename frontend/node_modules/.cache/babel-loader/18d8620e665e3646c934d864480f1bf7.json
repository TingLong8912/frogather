{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [opt_options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nvar VectorTileLayer = /** @class */function (_super) {\n  __extends(VectorTileLayer, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  function VectorTileLayer(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var baseOptions = /** @type {Object} */assign({}, options);\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    _this = _super.call(this, /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */baseOptions) || this;\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.on;\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.once;\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    _this.un;\n    if (options.renderMode === VectorTileRenderType.IMAGE) {\n      //FIXME deprecated - remove this check in v7.\n      //eslint-disable-next-line\n      console.warn('renderMode: \"image\" is deprecated. Option ignored.');\n      options.renderMode = undefined;\n    }\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == VectorTileRenderType.HYBRID || renderMode == VectorTileRenderType.VECTOR, 28); // `renderMode` must be `'hybrid'` or `'vector'`.\n    /**\n     * @private\n     * @type {import(\"./VectorTileRenderType.js\").default}\n     */\n    _this.renderMode_ = renderMode;\n    _this.setPreload(options.preload ? options.preload : 0);\n    _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ? options.useInterimTilesOnError : true);\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    _this.getBackground;\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    _this.setBackground;\n    return _this;\n  }\n  VectorTileLayer.prototype.createRenderer = function () {\n    return new CanvasVectorTileLayerRenderer(this);\n  };\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel map.getFeaturesAtPixel()}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  VectorTileLayer.prototype.getFeatures = function (pixel) {\n    return _super.prototype.getFeatures.call(this, pixel);\n  };\n  /**\n   * @return {import(\"./VectorTileRenderType.js\").default} The render mode.\n   */\n  VectorTileLayer.prototype.getRenderMode = function () {\n    return this.renderMode_;\n  };\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  VectorTileLayer.prototype.getPreload = function () {\n    return /** @type {number} */this.get(TileProperty.PRELOAD);\n  };\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function () {\n    return /** @type {boolean} */this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR);\n  };\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  VectorTileLayer.prototype.setPreload = function (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n  return VectorTileLayer;\n}(BaseVectorLayer);\nexport default VectorTileLayer;","map":{"version":3,"names":["BaseVectorLayer","CanvasVectorTileLayerRenderer","TileProperty","VectorTileRenderType","assert","assign","VectorTileLayer","_super","__extends","opt_options","_this","options","baseOptions","preload","useInterimTilesOnError","call","on","once","un","renderMode","IMAGE","console","warn","undefined","HYBRID","VECTOR","renderMode_","setPreload","setUseInterimTilesOnError","getBackground","setBackground","prototype","createRenderer","getFeatures","pixel","getRenderMode","getPreload","get","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","set"],"sources":["../src/layer/VectorTile.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport { LineString, MultiLineString, MultiPoint, MultiPolygon, Point, Polygon } from '../geom.js';\nimport { compose as composeTransform, create as createTransform } from '../transform.js';\nimport { createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray, getInteriorPointsOfMultiArray } from '../geom/flat/interiorpoint.js';\nimport { get as getProjection } from '../proj.js';\nimport { inflateEnds } from '../geom/flat/orient.js';\nimport { interpolatePoint } from '../geom/flat/interpolate.js';\nimport { linearRingss as linearRingssCenter } from '../geom/flat/center.js';\nimport { transform2D } from '../geom/flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nvar RenderFeature = /** @class */function () {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  function RenderFeature(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  RenderFeature.prototype.get = function (key) {\n    return this.properties_[key];\n  };\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  RenderFeature.prototype.getExtent = function () {\n    if (!this.extent_) {\n      this.extent_ = this.type_ === 'Point' ? createOrUpdateFromCoordinate(this.flatCoordinates_) : createOrUpdateFromFlatCoordinates(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n    }\n    return this.extent_;\n  };\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  RenderFeature.prototype.getFlatInteriorPoint = function () {\n    if (!this.flatInteriorPoints_) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(this.flatCoordinates_, 0, /** @type {Array<number>} */this.ends_, 2, flatCenter, 0);\n    }\n    return this.flatInteriorPoints_;\n  };\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  RenderFeature.prototype.getFlatInteriorPoints = function () {\n    if (!this.flatInteriorPoints_) {\n      var flatCenters = linearRingssCenter(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */this.ends_, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */this.ends_, 2, flatCenters);\n    }\n    return this.flatInteriorPoints_;\n  };\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  RenderFeature.prototype.getFlatMidpoint = function () {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n    }\n    return this.flatMidpoints_;\n  };\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  RenderFeature.prototype.getFlatMidpoints = function () {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      var flatCoordinates = this.flatCoordinates_;\n      var offset = 0;\n      var ends = /** @type {Array<number>} */this.ends_;\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  };\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  RenderFeature.prototype.getId = function () {\n    return this.id_;\n  };\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  RenderFeature.prototype.getOrientedFlatCoordinates = function () {\n    return this.flatCoordinates_;\n  };\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  RenderFeature.prototype.getGeometry = function () {\n    return this;\n  };\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  RenderFeature.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n    return this;\n  };\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  RenderFeature.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n    return this;\n  };\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  RenderFeature.prototype.getProperties = function () {\n    return this.properties_;\n  };\n  /**\n   * @return {number} Stride.\n   */\n  RenderFeature.prototype.getStride = function () {\n    return 2;\n  };\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  RenderFeature.prototype.getStyleFunction = function () {\n    return this.styleFunction;\n  };\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  RenderFeature.prototype.getType = function () {\n    return this.type_;\n  };\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  RenderFeature.prototype.transform = function (projection) {\n    projection = getProjection(projection);\n    var pixelExtent = projection.getExtent();\n    var projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n      transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, tmpTransform, this.flatCoordinates_);\n    }\n  };\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  RenderFeature.prototype.getEnds = function () {\n    return this.ends_;\n  };\n  return RenderFeature;\n}();\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates = RenderFeature.prototype.getOrientedFlatCoordinates;\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  var geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), GeometryLayout.XY);\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), GeometryLayout.XY);\n    case 'MultiLineString':\n      return new MultiLineString(renderFeature.getFlatCoordinates(), GeometryLayout.XY, /** @type {Array<number>} */renderFeature.getEnds());\n    case 'Polygon':\n      var flatCoordinates = renderFeature.getFlatCoordinates();\n      var ends = /** @type {Array<number>} */renderFeature.getEnds();\n      var endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1 ? new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss) : new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [opt_geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, opt_geometryName) {\n  var id = renderFeature.getId();\n  var geometry = toGeometry(renderFeature);\n  var properties = renderFeature.getProperties();\n  var feature = new Feature();\n  if (opt_geometryName !== undefined) {\n    feature.setGeometryName(opt_geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\nexport default RenderFeature;","map":{"version":3,"names":["Feature","GeometryLayout","LineString","MultiLineString","MultiPoint","MultiPolygon","Point","Polygon","compose","composeTransform","create","createTransform","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","getCenter","getHeight","extend","getInteriorPointOfArray","getInteriorPointsOfMultiArray","get","getProjection","inflateEnds","interpolatePoint","linearRingss","linearRingssCenter","transform2D","tmpTransform","RenderFeature","type","flatCoordinates","ends","properties","id","styleFunction","extent_","id_","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","ends_","properties_","prototype","key","getExtent","length","getFlatInteriorPoint","flatCenter","getFlatInteriorPoints","flatCenters","getFlatMidpoint","getFlatMidpoints","offset","i","ii","end","midpoint","getId","getOrientedFlatCoordinates","getGeometry","getSimplifiedGeometry","squaredTolerance","simplifyTransformed","opt_transform","getProperties","getStride","getStyleFunction","getType","transform","projection","pixelExtent","projectedExtent","getWorldExtent","scale","getEnds","getEndss","getFlatCoordinates","toGeometry","renderFeature","geometryType","XY","endss","Error","toFeature","opt_geometryName","geometry","feature","undefined","setGeometryName","setGeometry","setId","setProperties"],"sources":["../src/render/Feature.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
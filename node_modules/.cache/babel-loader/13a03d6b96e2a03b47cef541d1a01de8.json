{"ast":null,"code":"import { instance } from \"./../connection\";\nexport const getReverseGeocoding = async (lat, lon) => {\n  const {\n    data: {\n      location\n    }\n  } = await instance.get('/api/getReverseGeocoding', {\n    params: {\n      lat: lat,\n      lon: lon\n    }\n  });\n  const place_name = location[\"display_name\"];\n  const place_name_list = place_name === null || place_name === void 0 ? void 0 : place_name.split(\", \");\n  //console.log(place_name_list);\n  return place_name_list;\n};","map":{"version":3,"names":["instance","getReverseGeocoding","lat","lon","data","location","get","params","place_name","place_name_list","split"],"sources":["/Users/yantinglong/Documents/project/frogather/src/axios/getReverseGeoding.js"],"sourcesContent":["import { instance } from \"./../connection\";\n\nexport const getReverseGeocoding = async (lat, lon) => {\n  const { data: { location } } = await instance.get('/api/getReverseGeocoding',\n    {\n      params: \n      { \n        lat: lat,\n        lon: lon, \n      } \n    }\n  );\n  const place_name = location[\"display_name\"];\n  const place_name_list = place_name?.split(\", \");\n  //console.log(place_name_list);\n  return place_name_list\n} \n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAE1C,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EACrD,MAAM;IAAEC,IAAI,EAAE;MAAEC;IAAS;EAAE,CAAC,GAAG,MAAML,QAAQ,CAACM,GAAG,CAAC,0BAA0B,EAC1E;IACEC,MAAM,EACN;MACEL,GAAG,EAAEA,GAAG;MACRC,GAAG,EAAEA;IACP;EACF,CACF,CAAC;EACD,MAAMK,UAAU,GAAGH,QAAQ,CAAC,cAAc,CAAC;EAC3C,MAAMI,eAAe,GAAGD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEE,KAAK,CAAC,IAAI,CAAC;EAC/C;EACA,OAAOD,eAAe;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}
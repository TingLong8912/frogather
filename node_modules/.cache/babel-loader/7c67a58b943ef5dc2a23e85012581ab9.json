{"ast":null,"code":"var _jsxFileName = \"/Users/yantinglong/Documents/project/frogather/src/containers/Sences/Record/MapContainer.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Tooltip } from 'antd';\nimport styled from 'styled-components';\nimport { fromLonLat, toLonLat } from \"ol/proj\";\nimport { Map } from \"components/Map/Map\";\nimport { Layers, MapBoxLayer, VectorLayer, DrawVectorLayer, RecordVectorLayer } from \"components/Layers\";\nimport Geolocation from 'ol/Geolocation.js';\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Icon, Circle as CircleStyle, Style, Fill, Stroke } from \"ol/style\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport { vector } from \"components/Sources\";\nimport PinRed from \"assets/pin_red.svg\";\nimport PinGreen from \"assets/pin_green.svg\";\nimport MapContext from \"hook/MapContext\";\nimport { TbLayersOff, TbLayersSubtract } from \"react-icons/tb\";\nconst ViewButton = styled(Button)`\n  position: absolute;\n  bottom: 15px;\n  right: 5px;\n  background: #ffffff70;\n  backdrop-filter: blur(5px);\n  color: #161616;\n  align-items: center;\n  display: flex;\n  z-index: 2;\n  &>span{\n    align-items: center;\n    display: flex;\n  }\n`;\nconst MapContainer = ({\n  mapView,\n  setMapView\n}) => {\n  const {\n    userCoord,\n    recordCoords\n  } = useContext(MapContext);\n  const [isShowRecordVectorLayer, setIsShowRecordVectorLayer] = useState(true);\n  const handleViewButtonClick = () => {\n    setIsShowRecordVectorLayer(!isShowRecordVectorLayer);\n  };\n\n  // Geolocation\n  const geolocation = new Geolocation({\n    tracking: true,\n    projection: \"EPSG: 4326\"\n  });\n  const positionFeature = new Feature();\n  geolocation.on('change:position', () => {\n    const coordinates = geolocation.getPosition();\n    positionFeature.setGeometry(coordinates ? new Point(fromLonLat(coordinates, \"EPSG:3857\")) : null);\n  });\n\n  /* RECORD FEATURE */\n  var recordGeojsonObject = {\n    \"type\": \"FeatureCollection\",\n    \"name\": \"taipei_spot\",\n    \"crs\": {\n      \"type\": \"name\",\n      \"properties\": {\n        \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n      }\n    }\n  };\n  recordGeojsonObject[\"features\"] = recordCoords.map(({\n    id,\n    coordinates,\n    hashtag,\n    species\n  }) => {\n    return {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": coordinates\n      },\n      \"properties\": {\n        \"id\": id,\n        \"hashtag\": hashtag,\n        \"species\": species\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: isShowRecordVectorLayer ? \"關閉紀錄之點圖層\" : \"顯示紀錄之點圖層\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ViewButton, {\n    shape: \"round\",\n    onClick: handleViewButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, isShowRecordVectorLayer ? /*#__PURE__*/React.createElement(TbLayersOff, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(TbLayersSubtract, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Layers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MapBoxLayer, {\n    name: \"basemap_mapbox\",\n    zIndex: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DrawVectorLayer, {\n    name: \"draw\",\n    source: vector({\n      features: [new Feature({\n        geometry: new Point(fromLonLat(toLonLat(userCoord, \"EPSG:3857\"), \"EPSG:3857\"))\n      })]\n    }),\n    style: new Style({\n      image: new Icon({\n        anchor: [0.5, 16],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'pixels',\n        width: 50,\n        height: 50,\n        src: PinRed\n      })\n    }),\n    zIndex: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RecordVectorLayer, {\n    name: \"recordLayer\",\n    source: vector({\n      features: new GeoJSON().readFeatures(recordGeojsonObject, {\n        featureProjection: 'EPSG:3857'\n      })\n    }),\n    style: new Style({\n      image: new Icon({\n        anchor: [0.5, 16],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'pixels',\n        width: 40,\n        height: 40,\n        src: PinGreen\n      })\n    }),\n    visible: isShowRecordVectorLayer,\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VectorLayer, {\n    name: \"userlocation\",\n    source: vector({\n      features: [positionFeature]\n    }),\n    style: new Style({\n      image: new CircleStyle({\n        radius: 5,\n        fill: new Fill({\n          color: 'rgba(22, 22, 22, 0)'\n        }),\n        stroke: new Stroke({\n          color: \"rgba(60, 60, 60, 0)\",\n          width: 1\n        })\n      })\n    }),\n    zIndex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }))));\n};\nexport { MapContainer };","map":{"version":3,"names":["React","useContext","useEffect","useState","Button","Tooltip","styled","fromLonLat","toLonLat","Map","Layers","MapBoxLayer","VectorLayer","DrawVectorLayer","RecordVectorLayer","Geolocation","Feature","Point","Icon","Circle","CircleStyle","Style","Fill","Stroke","GeoJSON","vector","PinRed","PinGreen","MapContext","TbLayersOff","TbLayersSubtract","ViewButton","MapContainer","mapView","setMapView","userCoord","recordCoords","isShowRecordVectorLayer","setIsShowRecordVectorLayer","handleViewButtonClick","geolocation","tracking","projection","positionFeature","on","coordinates","getPosition","setGeometry","recordGeojsonObject","map","id","hashtag","species","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","shape","onClick","name","zIndex","source","features","geometry","style","image","anchor","anchorXUnits","anchorYUnits","width","height","src","readFeatures","featureProjection","visible","radius","fill","color","stroke"],"sources":["/Users/yantinglong/Documents/project/frogather/src/containers/Sences/Record/MapContainer.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Tooltip } from 'antd';\nimport styled from 'styled-components';\nimport { fromLonLat, toLonLat } from \"ol/proj\";\nimport { Map } from \"components/Map/Map\";\nimport { Layers, MapBoxLayer, VectorLayer, DrawVectorLayer, RecordVectorLayer } from \"components/Layers\";\nimport Geolocation from 'ol/Geolocation.js';\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Icon, Circle as CircleStyle, Style, Fill, Stroke } from \"ol/style\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport { vector } from \"components/Sources\";\nimport PinRed from 'assets/pin_red.svg';\nimport PinGreen from 'assets/pin_green.svg';\nimport MapContext from \"hook/MapContext\";\nimport { TbLayersOff, TbLayersSubtract } from \"react-icons/tb\";\n\nconst ViewButton = styled(Button)`\n  position: absolute;\n  bottom: 15px;\n  right: 5px;\n  background: #ffffff70;\n  backdrop-filter: blur(5px);\n  color: #161616;\n  align-items: center;\n  display: flex;\n  z-index: 2;\n  &>span{\n    align-items: center;\n    display: flex;\n  }\n`;\n\nconst MapContainer = ({mapView, setMapView}) => {\n  const { userCoord, recordCoords } = useContext(MapContext);\n  const [ isShowRecordVectorLayer, setIsShowRecordVectorLayer ] = useState(true);\n\n  const handleViewButtonClick = () => {\n    setIsShowRecordVectorLayer(!isShowRecordVectorLayer);\n  };\n  \n  // Geolocation\n  const geolocation = new Geolocation({\n    tracking: true,\n    projection: \"EPSG: 4326\"\n  });\n  const positionFeature = new Feature();\n  geolocation.on('change:position', () => {\n      const coordinates = geolocation.getPosition();\n      positionFeature.setGeometry(coordinates ? new Point(fromLonLat(coordinates, \"EPSG:3857\")) : null);\n  });\n\n  /* RECORD FEATURE */\n  var recordGeojsonObject = {\n    \"type\": \"FeatureCollection\",\n    \"name\": \"taipei_spot\",\n    \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n  };\n\n  recordGeojsonObject[\"features\"] = recordCoords.map(({ id, coordinates, hashtag, species }) => {\n    return {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": coordinates,\n      },\n      \"properties\": {\n        \"id\": id,\n        \"hashtag\": hashtag,\n        \"species\": species,\n      },\n    }\n  });\n\n  return (\n    <div id=\"map_container\">\n      <Tooltip title={ isShowRecordVectorLayer \n        ? \"關閉紀錄之點圖層\" \n        : \"顯示紀錄之點圖層\" \n      }>\n        <ViewButton shape=\"round\" onClick={handleViewButtonClick}>\n          { isShowRecordVectorLayer \n            ? <TbLayersOff />\n            : <TbLayersSubtract />\n          }\n        </ViewButton>\n      </Tooltip>\n      <Map>\n        <Layers>\n            <MapBoxLayer name={\"basemap_mapbox\"} zIndex={0} />\n            <DrawVectorLayer \n              name={\"draw\"}\n              source={vector({\n                  features: [\n                    new Feature({\n                      geometry: new Point(fromLonLat(toLonLat(userCoord, \"EPSG:3857\"), \"EPSG:3857\")),\n                    })\n                  ]\n              })}\n              style={\n                new Style({\n                  image: new Icon({\n                    anchor: [0.5, 16],\n                    anchorXUnits: 'fraction',\n                    anchorYUnits: 'pixels',\n                    width: 50,\n                    height: 50,\n                    src: PinRed,\n                  })\n                })\n              }\n              zIndex={3}\n            />\n            <RecordVectorLayer\n              name={\"recordLayer\"}\n              source={vector({\n                features: new GeoJSON().readFeatures(recordGeojsonObject, { featureProjection: 'EPSG:3857' }),\n              })}\n              style={\n                new Style({\n                  image: new Icon({\n                    anchor: [0.5, 16],\n                    anchorXUnits: 'fraction',\n                    anchorYUnits: 'pixels',\n                    width: 40,\n                    height: 40,\n                    src: PinGreen,\n                  })\n                })\n              }\n              visible={isShowRecordVectorLayer}\n              zIndex={2}\n            />\n            <VectorLayer\n              name={\"userlocation\"}\n              source={vector({\n                features: [positionFeature]\n              })}\n              style={\n                new Style({\n                  image: new CircleStyle({\n                    radius: 5,\n                    fill: new Fill({\n                      color: 'rgba(22, 22, 22, 0)',\n                    }),\n                    stroke: new Stroke({\n                      color: \"rgba(60, 60, 60, 0)\",\n                      width: 1\n                    }),\n                  })\n                })\n              }\n              zIndex={1}\n            />\n        </Layers>\n      </Map>\n    </div>\n  );\n};\n\nexport { MapContainer }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}